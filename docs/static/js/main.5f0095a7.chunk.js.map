{"version":3,"sources":["assets/images/logo.svg","pages/MobxBasic/TodoListLess.module.css","pages/ReactBasic/Dog.js","pages/ReactBasic/Cat.js","pages/ReactBasic/Animal.js","pages/Home.js","pages/Context.js","pages/Logo.js","pages/AntdDemo.js","pages/AntdForm.js","pages/AntdMenu.js","pages/AntdTable.js","pages/AntdData.js","pages/AntdAlert.js","pages/AntdFormInput.js","utils/createData.js","mock/movieList.js","axios/api.js","pages/FilmList.js","pages/StudentList.js","pages/MobxBasic/TodoListView.js","pages/MobxDemo.js","LayoutBox.js","mock/mock.js","App.js","serviceWorker.js","stores/Stores.js","pages/MobxBasic/TodoListMod.js","index.js"],"names":["module","exports","__webpack_require__","p","todoList","Dog","_this$props","this","props","count","addDog","react_default","a","createElement","es_button","type","onClick","Component","Cat","addCat","Animal","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","state","dogCount","console","log","catCount","_this$state","ReactBasic_Dog","ReactBasic_Cat","myStyle","color","fontSize","arr","key","Welcome","React","Clock","date","Date","_this2","timeID","setInterval","tick","clearInterval","toLocaleTimeString","name","ActionLink","href","e","preventDefault","defaultProps","Toggle","_this3","isToggleOn","handleClick","bind","assertThisInitialized","prevState","Name","Link","site","WebSite","_this4","Home_Name","Home_Link","students","id","SearchStudent","_this5","item","handleChange","target","value","_this6","onChange","map","includes","Button","_this7","data","setNewData","style","fontWeight","Home_Content","myNumber","Content","axios","get","then","res","newProps","newState","prevProps","HelloMessage","_this8","teacherName","handleChangeTeacher","event","Home_HelloMessageContent","from","updateStateProp","Home_Teacher","changeTeacherName","HelloMessageContent","children","Teacher","_this9","handleTeacherChange","FlavorForm","_this10","handleSubmit","onSubmit","Home","className","Home_Welcome","Home_Clock","Home_Toggle","Home_WebSite","Home_Button","Home_HelloMessage","Home_FlavorForm","Home_SearchStudent","ReactBasic_Animal","ThemeContext","createContext","Toolbar","Context_ThemedButton","ThemedButton","context","theme","contextType","Context","Provider","Topic","_ref","match","params","LogoEdit","goBack","history","go","Logo","_ref2","src","logo","alt","react_router_dom","to","concat","url","react_router","path","component","exact","render","moment","locale","Title","Typography","Paragraph","Text","SubMenu","Menu","Item","MenuItemGroup","ItemGroup","Step","Steps","AntdDemo","str","menuCurrent","message","info","format","handleMenuClick","date_picker","marginTop","divider","Group","size","icon","loading","block","shape","ghost","spin","rotate","twoToneColor","typography","strong","level","code","leave","disabled","mark","underline","delete","editable","copyable","text","row","col","span","gutter","justify","backgroundColor","offset","menu","selectedKeys","mode","title","Divider","rel","pagination","defaultCurrent","total","simple","showSizeChanger","showQuickJumper","steps","current","description","HorizontalLoginForm","form","validateFields","err","values","fieldsError","_this$props$form","getFieldDecorator","getFieldsError","getFieldError","isFieldTouched","usernameError","passwordError","es_form","layout","validateStatus","help","rules","required","input","prefix","placeholder","htmlType","keys","some","field","WrappedHorizontalLoginForm","Form","create","NormalLoginForm","resetForm","resetFields","getField","_this2$props$form","getFieldValue","getFieldsValue","username","fieldsValue","getError","_this2$props$form2","checkSex","rule","callback","colon","hasFeedback","initialValue","Password","validator","es_radio","valuePropName","es_checkbox","float","width","WrappedNormalLoginForm","Option","Select","AutoCompleteOption","AutoComplete","residences","label","RegistrationForm","confirmDirty","autoCompleteResult","validateFieldsAndScroll","handleConfirmBlur","compareToFirstPassword","validateToNextPassword","force","handleWebsiteChange","domain","tailFormItemLayout","wrapperCol","xs","sm","prefixSelector","es_select","websiteOptions","website","assign","labelCol","extra","onBlur","tooltip","whitespace","cascader","options","addonBefore","auto_complete","dataSource","WrappedRegistrationForm","DynamicFieldSet","remove","k","length","setFieldsValue","filter","add","nextKeys","names","_this$props$form2","formItemLayout","formItemLayoutWithOutLabel","formItems","index","validateTrigger","marginRight","WrappedDynamicFieldSet","AntdForm","AntdData","avatar","Column","Table","columns","dataIndex","filters","onFilter","record","indexOf","sorter","b","sortDirections","defaultSortOrder","age","filterMultiple","address","tags","tag","es_tag","toUpperCase","userList","firstName","lastName","rowSelection","selectedRowKeys","selectedRows","getCheckboxProps","UserTable","start","setTimeout","onSelectedChange","showModal","modalVisible","handleOk","currentUser","forEach","splice","handleCancel","deleteUser","hideDefaultSelections","selections","onSelect","toConsumableArray","Array","changableRowKeys","newSelectedRowKeys","hasSelected","marginBottom","marginLeft","table","bordered","footer","expandedRowRender","margin","colSpan","modal","visible","onOk","onCancel","UserTableForm","AntdTable","ListData","content","deadline","now","operations","AntdMenu","selectedDate","tagChecked","handleCalendarPanelChange","handleCalendarSelect","handleTagClose","handleTagChange","handleTabsChanage","badge","dot","border","borderRadius","es_alert","calendar","fullscreen","onPanelChange","empty","image","Empty","PRESENTED_IMAGE_SIMPLE","imageStyle","height","list","header","renderItem","popover","placement","trigger","arrowPointAtCenter","statistic","precision","card","valueStyle","suffix","Countdown","timeline","pending","reverse","closable","onClose","CheckableTag","checked","tabs","defaultActiveKey","tabPosition","tabBarExtraContent","TabPane","tab","AntdAlert","drawerVisible","drawerPlacement","percent","showDrawer","handleDrawerClose","handleDrawerPlacementChange","handleModalOk","handleModalCancel","showMessage","hide","showNotification","btn","notification","close","success","duration","increase","decline","handlePopconfirmConfirm","handlePopconfirmCancel","error","closeText","showIcon","banner","defaultValue","drawer","val","config","AntdAlert_Option","progress","status","showInfo","strokeColor","0%","100%","successPercent","strokeLinecap","popconfirm","okText","cancelText","onConfirm","textAlign","background","padding","tip","spinning","delay","es_switch","indicator","skeleton","MonthPicker","DatePicker","RangePicker","WeekPicker","Input","Search","TextArea","cascaderOptions","onCascaderChange","cascaderFilter","inputValue","option","toLowerCase","onDateChange","dateString","dateFormatList","selectBefore","AntdFormInput_Option","selectAfter","AntdFormInput","checkboxChecked","checkboxDisabled","handleSearch","toggleCheckboxChecked","toggleCheckboxDisabled","onCheckboxChange","radioStyle","display","lineHeight","checkedValue","autoFocus","defaultChecked","buttonStyle","addonAfter","onSearch","indeterminate","changeOnSelect","showSearch","dateRender","renderExtraFooter","showTime","ranges","Today","This Month","startOf","endOf","input_number","min","max","step","formatter","replace","parser","enterButton","rows","checkedChildren","unCheckedChildren","CreateData","Mock","Random","extend","filmtype","pick","movieList","mock","film|10","id|+1","hot","defaults","headers","post","interceptors","request","use","Promise","reject","response","api","resolve","catch","fetch","FilmList","film","rowKey","StudentList","ColumnGroup","studentList","selectedStudents","modalType","getStudentList","arguments","undefined","currentStudent","newStudents","push","studentIndex","deleteStudents","deleteOneStudent","_this$state2","idError","nameError","ageError","sexError","tableTitle","StudentList_Column","sex","Todo","Math","random","finished","decorate","observable","TodoList","newTodo","todos","todo","computed","action","TodoListView","inject","observer","todoTitle","handlePressEnter","addTodo","changeAppTheme","AppStore","styles","onPressEnter","TodoListView_TodoView","unfinishedTodoCount","TodoView","store","MobxDemoView","onIncrement","onDecrement","extendObservable","TodoListView_TodoListView","timer","elapsedTime","numbers","sum","reduce","disposer","autorun","_React$Component","_getPrototypeOf2","_len","args","_key","apply","inherits","createClass","MobxDemo_TodoView","MobxDemo","handleThemeChange","setTheme","MobxDemo_TodoListView","MobxBasic_TodoListView","Layout","Sider","Header","Footer","LayoutBox","overflow","position","left","defaultSelectedKeys","LayoutBox_Content","i","template","Boolean","boolean","Natural","natural","Integer","integer","Float","Character","character","String","string","Range","range","Image","Color","paragraph","Url","Address","province","App","location","window","hostname","appStore","_callee","payload","regenerator_default","wrap","_context","prev","next","runInAction","stop","themeObj","todoListMod","newTheme","ReactDOM","locale_provider","zh_TW","index_module","stores","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5f0095a7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoList\":\"TodoListLess_todoList__1zQAi\"};","import React, { Component } from 'react';\r\nimport { Button } from 'antd';\r\n\r\nclass Dog extends Component {\r\n    render(){\r\n        const { count, addDog } = this.props;\r\n        return (\r\n            <div>\r\n                <p>狗的数量：{ count }</p>\r\n                <Button type=\"primary\" onClick={addDog}>加1</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dog;\r\n","import React, { Component } from 'react';\r\nimport { Button } from 'antd';\r\n\r\nclass Cat extends Component {\r\n    render(){\r\n        const { count, addCat } = this.props;\r\n        return (\r\n            <div>\r\n                <p>猫的数量：{ count }</p>\r\n                <Button type=\"primary\" onClick={addCat}>加1</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Cat;\r\n","import React, { Component } from 'react';\r\nimport Dog from './Dog';\r\nimport Cat from './Cat';\r\n\r\nclass Animal extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            dogCount: 2,\r\n            catCount: 3,\r\n        }\r\n    }\r\n\r\n    addDog = () => {\r\n        this.setState(state => ({\r\n            dogCount: state.dogCount + 1,\r\n        }));\r\n        console.log(this.state);\r\n\r\n    }\r\n\r\n    addCat = () => {\r\n        console.log(this.state);\r\n        this.setState(state => ({\r\n            catCount: state.catCount + 1,\r\n        }));\r\n        console.log(this.state);\r\n\r\n    }\r\n\r\n    render(){\r\n        const { dogCount, catCount } = this.state;\r\n        return (\r\n            <div>\r\n                <Dog count={dogCount} addDog={this.addDog} />\r\n                <Cat count={catCount} addCat={this.addCat} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Animal;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport Animal from './ReactBasic/Animal'\r\nimport axios from 'axios';\r\n\r\n// 内联样式\r\nvar myStyle = {\r\n    color: '#ff0000',\r\n    fontSize: 18\r\n}\r\n\r\n// 渲染数组\r\nvar arr = [\r\n    <h5 key='1'>菜鸟教程</h5>,\r\n    <h5 key='2'>学的不仅是技术，更是梦想！</h5>,\r\n]\r\n\r\n// 定义组件2\r\nclass Welcome extends React.Component {\r\n    render() {\r\n        return <h6>Hello World!</h6>;\r\n    }\r\n}\r\n\r\n// state\r\nclass Clock extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { date: new Date() }\r\n    }\r\n    componentDidMount() {\r\n        // 生命周期\r\n        this.timeID = setInterval(\r\n            () => this.tick(), 1000\r\n        )\r\n    }\r\n    componentWillUnmount() {\r\n        // 生命周期\r\n        clearInterval(this.timeID)\r\n    }\r\n    tick() {\r\n        this.setState({\r\n            date: new Date()\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h6>现在是{this.state.date.toLocaleTimeString()}</h6>\r\n                <p>\r\n                    name: {this.props.name}\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// 默认参数\r\nClock.defaultProps = {\r\n    name: 'Tom'\r\n}\r\n\r\n// props验证 依赖prop-types\r\nClock.propTypes = {\r\n    name: PropTypes.string\r\n};\r\n\r\n// 事件处理\r\nfunction ActionLink() {\r\n    function handleClick(e) {\r\n        e.preventDefault();\r\n        console.log('链接点击')\r\n    }\r\n    return (\r\n        <a href=\"/\" onClick={handleClick}>\r\n            点我\r\n      </a>\r\n    )\r\n}\r\n\r\n// 向事件处理器传参\r\nclass Toggle extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            name: 'Lilisi',\r\n            isToggleOn: false\r\n        }\r\n        // 1. 这边绑定是必要的，这样 `this` 才能在回调函数中使用\r\n        this.handleClick = this.handleClick.bind(this)\r\n    }\r\n    handleClick(name, e) {\r\n        // 2. 使用箭头函数定义事件处理器\r\n        // this.setState接受对象或函数\r\n        this.setState(prevState => ({\r\n            isToggleOn: !prevState.isToggleOn\r\n        }))\r\n        console.log(name)\r\n    }\r\n    render() {\r\n        return (\r\n            // 3. 绑定事件使用箭头函数 (e) => {this.handleClick(e)}\r\n            // 传递参数  (e) => this. deleteRow(id, e) || this.deleteRow.bind(this, id)\r\n            <button onClick={this.handleClick.bind(this, this.state.name)}>\r\n                {this.state.isToggleOn ? 'ON' : 'OFF'}\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\n// 父子组件传值\r\nclass Name extends React.Component {\r\n    render() {\r\n        return <p>name: {this.props.name}</p>\r\n    }\r\n}\r\n\r\nclass Link extends React.Component {\r\n    render() {\r\n        return <a href={this.props.site}>{this.props.site}</a>\r\n    }\r\n}\r\n\r\nclass WebSite extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            name: 'Google',\r\n            site: 'www.google.com'\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Name name={this.state.name} />\r\n                <Link site={this.state.site} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// 列表\r\n// let numbers = [1, 2, 3, 4]\r\nlet students = [\r\n    {\r\n        id: 1,\r\n        name: 'Lilei'\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Tom'\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Lili'\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'Lucy'\r\n    },\r\n    {\r\n        id: 5,\r\n        name: 'Hanmeimei'\r\n    }\r\n]\r\n// let listItems = numbers.map(item => <li key={item}>{item}</li>)\r\n\r\n// class StudentList extends React.Component {\r\n//     render(){\r\n//         return (\r\n//             <div>\r\n//                 <ul>\r\n//                     {/* {listItems} */}\r\n//                     {students.map(item => {\r\n//                         return item.name.includes(this.props.filterValue) ? <li key={item.id}>{item.name}</li> : ''\r\n//                         // return <li key={item.id}>{item.name}</li>\r\n//                     })}\r\n//                 </ul>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\nclass SearchStudent extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            item: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n    handleChange(e){\r\n        this.setState({\r\n            item: e.target.value\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input value={this.state.item} onChange={this.handleChange} />\r\n                {/* <StudentList filterValue={this.state.item} /> */}\r\n                <ul>\r\n                    {students.map(item => {\r\n                        return item.name.includes(this.state.item) ? <li key={item.id}>{item.name}</li> : ''\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// 生命周期\r\nclass Button extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data: 0\r\n        }\r\n        this.setNewData = this.setNewData.bind(this)\r\n    }\r\n    setNewData() {\r\n        this.setState({ data: this.state.data + 1 })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 style={{ color: 'darkblue', fontWeight: 'bolder' }}>生命周期示例</h1>\r\n                <button onClick={this.setNewData}>加1</button>\r\n                <Content myNumber={this.state.data} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Content extends React.Component {\r\n    componentWillMount() {\r\n        console.log('componentWillMount')\r\n    }\r\n    componentDidMount() {\r\n        // 在这里使用AJAX请求数据\r\n        console.log('componentDidMount')\r\n        axios.get('http://127.0.0.1:3004/student/list').then(res => {\r\n            console.log(res)\r\n        })\r\n    }\r\n    componentWillReceiveProps(newProps) {\r\n        console.log('componentWillReceiveProps')\r\n    }\r\n    shouldComponentUpdate(newProps, newState) {\r\n        console.log('shouldComponentUpdate')\r\n        return true\r\n    }\r\n    componentWillUpdate(newProps, newState) {\r\n        console.log('componentWillUpdate')\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        console.log('componentDidUpdate')\r\n        console.log('--------------------')\r\n    }\r\n    componentWillUnmount() {\r\n        // 在这里取消未完成的请求\r\n        console.log('componentWillUnmount')\r\n    }\r\n    render() {\r\n        return <p>{this.props.myNumber}</p>\r\n    }\r\n}\r\n\r\n// 表单事件\r\nclass HelloMessage extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            value: 'Hello ',\r\n            teacherName: 'Jack'\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleChangeTeacher = this.handleChangeTeacher.bind(this)\r\n    }\r\n    handleChange(event) {\r\n        this.setState({ value: event.target.value })\r\n    }\r\n    handleChangeTeacher(name, e){\r\n        this.setState(\r\n            {\r\n                teacherName: name\r\n            }\r\n        )\r\n        console.log(name)\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 style={{ color: 'darkblue', fontWeight: 'bolder' }}>组件通信示例</h1>\r\n                <HelloMessageContent from={this.state.teacherName} value={this.state.value} updateStateProp={this.handleChange}>\r\n                    <div>children1</div>\r\n                </HelloMessageContent>\r\n                <Teacher name={this.state.teacherName} changeTeacherName={this.handleChangeTeacher} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass HelloMessageContent extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input type=\"text\" value={this.props.value} onChange={this.props.updateStateProp} />\r\n                <p>\r\n                    {this.props.value} from：{this.props.from}\r\n                </p>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Teacher extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            teacherName: this.props.name\r\n        }\r\n        this.handleTeacherChange = this.handleTeacherChange.bind(this)\r\n    }\r\n    handleTeacherChange(e){\r\n        this.setState({\r\n            teacherName: e.target.value\r\n        })\r\n    }\r\n    render(){\r\n        return (\r\n            <div>\r\n                <input type=\"text\" value={this.state.teacherName} onChange={this.handleTeacherChange} />\r\n                <button onClick={this.props.changeTeacherName.bind(this, this.state.teacherName)}>修改老师</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass FlavorForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            value: 'Apple'\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({ value: event.target.value })\r\n    }\r\n    handleSubmit(event) {\r\n        console.log('选择： ' + this.state.value)\r\n        event.preventDefault()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <select value={this.state.value} onChange={this.handleChange}>\r\n                        <option value=\"Google\">Google</option>\r\n                        <option value=\"Apple\">苹果</option>\r\n                        <option value=\"MW\">微软</option>\r\n                        <option value=\"FB\">Facebook</option>\r\n                    </select>\r\n                    <input type=\"submit\" value=\"提交\" />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// 定义组件1\r\nfunction Home(props) {\r\n    return (\r\n        <div>\r\n            <h1 className='hello-title'>Hello {props.name}</h1>\r\n            <div style={myStyle}>\r\n                {/* 这里是注释 */}\r\n                {/* 表达式和三元运算符 */}\r\n                Edit <code>src/App.js</code> and save to reload.{1 + 1} - {1 == 2 ? 'true' : 'false'}\r\n                {arr}\r\n            </div>\r\n            <Welcome />\r\n            <hr/>\r\n            <Clock name=\"Lucy\" />\r\n            <hr/>\r\n            <ActionLink />\r\n            <hr/>\r\n            <Toggle />\r\n            <hr/>\r\n            <WebSite />\r\n            <hr/>\r\n            <Button />\r\n            <hr/>\r\n            <HelloMessage />\r\n            <hr/>\r\n            <FlavorForm />\r\n            <hr/>\r\n            <SearchStudent />\r\n            <Animal />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\n\r\nconst ThemeContext = React.createContext('light');\r\n\r\nfunction Toolbar(props) {\r\n    return (\r\n        <div>\r\n            <ThemedButton />\r\n        </div>\r\n    );\r\n}\r\n\r\nclass ThemedButton extends React.Component {\r\n    // 指定 contextType 读取当前的 theme context。\r\n    // React 会往上找到最近的 theme Provider，然后使用它的值。\r\n    // 在这个例子中，当前的 theme 值为 “dark”。\r\n    static contextType = ThemeContext;\r\n    render() {\r\n        console.log(this.context);\r\n        return <Button theme={this.context}>确定</Button>;\r\n    }\r\n}\r\n\r\nclass Context extends React.Component {\r\n    render() {\r\n        return (\r\n            <ThemeContext.Provider value=\"dark\">\r\n                <Toolbar />\r\n            </ThemeContext.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Context;\r\n","import React from 'react'\r\nimport { Link, Route } from 'react-router-dom'\r\nimport { Button } from 'antd'\r\nimport './Logo.css'\r\nimport logo from '../assets/images/logo.svg'\r\n\r\nfunction Topic({ match }) {\r\n    return <h3>Requested Param: {match.params.id}</h3>;\r\n}\r\n\r\nclass LogoEdit extends React.Component {\r\n    componentDidMount(){\r\n        console.log(this.props)\r\n    }\r\n    goBack = e => {\r\n        this.props.history.go(-1)\r\n    }\r\n    render(){\r\n        const {match: {params: {id}}} = this.props;\r\n        return (\r\n            <div>\r\n                {id}\r\n                <Button type=\"primary\" onClick={this.goBack}>返回</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction Logo({ match }) {\r\n    return (\r\n        <div>\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n            <h2>Topics</h2>\r\n\r\n            <ul>\r\n                <li>\r\n                    <Link to={`${match.url}/components`}>Components</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to={`${match.url}/props-v-state`}>Props v. State</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to={`${match.url}/edit/hh`}>EditLogo</Link>\r\n                </li>\r\n            </ul>\r\n\r\n            <Route path={`${match.path}/:id`} component={Topic} />\r\n            <Route\r\n                exact\r\n                path={match.path}\r\n                render={() => <h3>Please select a topic.</h3>}\r\n            />\r\n            <Route path={`${match.path}/edit/:id`} component={LogoEdit} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logo\r\n","import React from 'react';\r\nimport { Button, Icon, Typography, Row, Col, Menu, Pagination, Steps, Divider, DatePicker, message } from 'antd';\r\nimport moment from 'moment';\r\nimport 'moment/locale/zh-cn';\r\nimport \"antd/dist/antd.css\";\r\n\r\nmoment.locale('zh-cn');\r\n\r\nconst { Title, Paragraph, Text } = Typography;\r\nconst { SubMenu, Item } = Menu;\r\nconst MenuItemGroup = Menu.ItemGroup;\r\nconst Step = Steps.Step;\r\n\r\nclass AntdDemo extends React.Component {\r\n    state = {\r\n        date: null,\r\n        str: '这里是一个可编辑的段落',\r\n        menuCurrent: 'mail'\r\n    };\r\n\r\n    handleChange = (date) => {\r\n        message.info(`您选择的日期是: ${date.format('YYYY-MM-DD')}`);\r\n        this.setState({ date });\r\n        // console.log(this.state.data.film)\r\n    }\r\n    onChange = (str) => {\r\n        console.log('Content change:', str);\r\n        this.setState({ str });\r\n    }\r\n    handleMenuClick = (e) => {\r\n        console.log(e.key)\r\n        this.setState({\r\n            menuCurrent: e.key\r\n        })\r\n    }\r\n    render() {\r\n        const { date } = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>示例</h1>\r\n                    <div className=\"antd-demo-content\">\r\n                        <div>\r\n                            <DatePicker onChange={this.handleChange} />\r\n                            <div style={{ marginTop: 20 }}>\r\n                                当前日期：{date ? date.format('YYYY-MM-DD') : '未选择'}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>Button</h1>\r\n                    <div className=\"antd-demo-content\">\r\n                        <Button.Group size=\"small\">\r\n                            <Button type=\"primary\">\r\n                                <Icon type=\"left\" />上一页\r\n                        </Button>\r\n                            <Button type=\"primary\">\r\n                                下一页<Icon type=\"right\" />\r\n                            </Button>\r\n                        </Button.Group>\r\n                        <Button type=\"primary\" icon=\"search\" loading block>确认</Button>\r\n                        <Button type=\"dashed\" shape=\"circle\" icon=\"search\" />\r\n                        <Button type=\"primary\" icon=\"download\" shape=\"round\" ghost>下载</Button>\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>Icon</h1>\r\n                    <p>可以使用svg和Iconfont</p>\r\n                    <div className=\"antd-demo-content\">\r\n                        <Icon type=\"home\" style={{ color: 'blue', fontSize: '16px' }} />\r\n                        <Icon type=\"setting\" theme=\"filled\" />\r\n                        <Icon type=\"smile\" theme=\"outlined\" />\r\n                        <Icon type=\"sync\" spin />\r\n                        <Icon type=\"smile\" rotate={180} />\r\n                        <Icon type=\"loading\" />\r\n                        <Icon type=\"smile\" theme=\"twoTone\" />\r\n                        <Icon type=\"heart\" theme=\"twoTone\" twoToneColor=\"#eb2f96\" />\r\n                        <Icon type=\"check-circle\" theme=\"twoTone\" twoToneColor=\"#52c41a\" />\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>Typography</h1>\r\n                    <p>排版</p>\r\n                    <div className=\"antd-demo-content\">\r\n                        <Typography>\r\n                            <Title>文章标题</Title>\r\n                            <Paragraph>\r\n                                In the process of internal desktop applications development, many different design specs and implementations would be involved, which might cause designers and developers difficulties and duplication and reduce the efficiency of development.\r\n                            </Paragraph>\r\n                            <Divider />\r\n                            <Paragraph>\r\n                                After massive project practice and summaries, Ant Design, a design language for background applications, is refined by Ant UED Team, which aims to <Text strong>uniform the user interface specs for internal background projects, lower the unnecessary cost of design differences and implementation and liberate the resources of design and front-end development</Text>.\r\n                            </Paragraph>\r\n                            <Title level={2}>Guidelines and Resources</Title>\r\n                            <Paragraph>\r\n                                We supply a series of design principles, practical patterns and high quality design resources (<Text code>Sketch</Text> and <Text code>Axure</Text>), to help people create their product prototypes beautifully and efficiently.\r\n                            </Paragraph>\r\n                            <Title level={2}>leave=2</Title>\r\n                            <Title leave={3}>leave=3</Title>\r\n                            <Text type=\"secondary\">secondary</Text><Text type=\"warning\">warning</Text><Text type=\"danger\">danger</Text>\r\n                            <Text disabled>disabled</Text><Text mark>mark</Text><Text code>code</Text>\r\n                            <Text underline>underline</Text><Text delete>delete</Text><Text strong>strong</Text>\r\n                            <Paragraph editable={{ onChange: this.onChange }}>{this.state.str}</Paragraph>\r\n                            <Paragraph copyable>这里是一个可复制的段落</Paragraph>\r\n                            <Paragraph copyable={{ text: 'Hello, Ant Design!' }}>这里是一个指定复制文本的可复制的段落</Paragraph>\r\n                        </Typography>\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>栅格</h1>\r\n                    <p>栅格布局</p>\r\n                    <div className=\"antd-demo-content\"></div>\r\n                    <div>\r\n                        <Row>\r\n                            <Col span={12}>col-12</Col>\r\n                            <Col span={12}>col-12</Col>\r\n                        </Row>\r\n                        <Row gutter={24} type=\"flex\" justify=\"end\">\r\n                            <Col span={8} style={{ backgroundColor: 'darkyellow' }}>col-8</Col>\r\n                            <Col span={8} style={{ backgroundColor: 'darkyellow' }} offset={8}>col-8</Col>\r\n                        </Row>\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>Layout</h1>\r\n                    <p>\r\n                        布局\r\n                    </p>\r\n                    <ul>\r\n                        <li>Layout</li>\r\n                        <li>Header</li>\r\n                        <li>Sider</li>\r\n                        <li>Content</li>\r\n                        <li>Footer</li>\r\n                    </ul>\r\n                    <div className=\"antd-demo-content\">\r\n\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>固钉</h1>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>面包屑</h1>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>下拉菜单</h1>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>导航</h1>\r\n                    <p>顶部导航，侧边导航，内嵌菜单（收缩，手风琴）</p>\r\n                    <div className=\"antd-demo-content\">\r\n                        <Menu\r\n                            onClick={this.handleMenuClick}\r\n                            selectedKeys={[this.state.menuCurrent]}\r\n                            mode=\"horizontal\"\r\n                        >\r\n                            <Menu.Item key=\"mail\">\r\n                                <Icon type=\"mail\" />Navigation One\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"app\" disabled>\r\n                                <Icon type=\"appstore\" />Navigation Two\r\n                            </Menu.Item>\r\n                            <SubMenu title={<span className=\"submenu-title-wrapper\"><Icon type=\"setting\" />Navigation Three - Submenu</span>}>\r\n                                <MenuItemGroup title=\"Item 1\">\r\n                                    <Menu.Item key=\"setting:1\">Option 1</Menu.Item>\r\n                                    <Menu.Item key=\"setting:2\">Option 2</Menu.Item>\r\n                                </MenuItemGroup>\r\n                                <MenuItemGroup title=\"Item 2\">\r\n                                    <Menu.Item key=\"setting:3\">Option 3</Menu.Item>\r\n                                    <Menu.Divider />\r\n                                    <Menu.Item key=\"setting:4\">Option 4</Menu.Item>\r\n                                </MenuItemGroup>\r\n                            </SubMenu>\r\n                            <Item key=\"alipay\">\r\n                                <a href=\"https://ant.design\" target=\"_blank\" rel=\"noopener noreferrer\">Navigation Four - Link</a>\r\n                            </Item>\r\n                        </Menu>\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>分页</h1>\r\n                    <p>总数，每页数，迷你，简洁，默认页，显示切换pageSize，显示跳转，显示总数</p>\r\n                    <div className=\"antd-demo-content\">\r\n                        <Pagination size=\"small\" defaultCurrent={1} total={500} simple showSizeChanger showQuickJumper />\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>页头</h1>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>步骤条</h1>\r\n                    <p></p>\r\n                    <div className=\"antd-demo-content\">\r\n                        <Steps current={1}>\r\n                            <Step title=\"完成\" description=\"描述1\" />\r\n                            <Step title=\"进行中\" description=\"描述2\" />\r\n                            <Step title=\"等待\" description=\"描述3\" />\r\n                        </Steps>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AntdDemo;\r\n","import React from 'react';\r\nimport {\r\n    Divider,\r\n    Form,\r\n    Icon,\r\n    Input,\r\n    Button,\r\n    Radio,\r\n    Checkbox,\r\n    Tooltip,\r\n    Cascader,\r\n    Select,\r\n    Row,\r\n    Col,\r\n    AutoComplete,\r\n} from 'antd';\r\n\r\nfunction hasErrors(fieldsError) {\r\n    return Object.keys(fieldsError).some(field => fieldsError[field]);\r\n}\r\n\r\nclass HorizontalLoginForm extends React.Component {\r\n    componentDidMount() {\r\n        // To disabled submit button at the beginning.\r\n        this.props.form.validateFields();\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                console.log('Received values of form: ', values);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            getFieldDecorator, getFieldsError, getFieldError, isFieldTouched,\r\n        } = this.props.form;\r\n\r\n        // Only show error after a field is touched.\r\n        const usernameError = isFieldTouched('username') && getFieldError('username');\r\n        const passwordError = isFieldTouched('password') && getFieldError('password');\r\n        return (\r\n            <Form layout=\"inline\" onSubmit={this.handleSubmit}>\r\n                <Form.Item\r\n                    validateStatus={usernameError ? 'error' : ''}\r\n                    help={usernameError || ''}\r\n                >\r\n                    {getFieldDecorator('username', {\r\n                        rules: [{ required: true, message: 'Please input your username!' }],\r\n                    })(\r\n                        <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Username\" />\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item\r\n                    validateStatus={passwordError ? 'error' : ''}\r\n                    help={passwordError || ''}\r\n                >\r\n                    {getFieldDecorator('password', {\r\n                        rules: [{ required: true, message: 'Please input your Password!' }],\r\n                    })(\r\n                        <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        disabled={hasErrors(getFieldsError())}\r\n                    >\r\n                        Log in\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nconst WrappedHorizontalLoginForm = Form.create({ name: 'horizontal_login' })(HorizontalLoginForm);\r\n\r\nclass NormalLoginForm extends React.Component {\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                console.log('Received values of form: ', values);\r\n            }\r\n        });\r\n    }\r\n    resetForm = e => {\r\n        const { resetFields } = this.props.form;\r\n        resetFields(['username']);\r\n    }\r\n    getField = e => {\r\n        const {form:{getFieldValue, getFieldsValue}} = this.props;\r\n        var username = getFieldValue('username');\r\n        var fieldsValue = getFieldsValue()\r\n        console.log(username);\r\n        console.log(fieldsValue);\r\n    }\r\n    getError = e => {\r\n        const {form:{getFieldError, getFieldsError}} = this.props;\r\n        var usernameError = getFieldError('username');\r\n        var fieldsError = getFieldsError();\r\n        console.log(usernameError);\r\n        console.log(fieldsError);\r\n    }\r\n\r\n    checkSex = (rule, value, callback) => {\r\n        if(value && value !== '1'){\r\n            callback('必须选1')\r\n        }else{\r\n            callback()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                <Form.Item colon={false} hasFeedback>\r\n                    {getFieldDecorator('username', {\r\n                        rules: [{ required: true, message: 'Please input your username!' }],\r\n                        initialValue: '初始值'\r\n                    })(\r\n                        <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Username\" />\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    {getFieldDecorator('password', {\r\n                        rules: [{ required: true, message: 'Please input your Password!' }],\r\n                        initialValue: '123456'\r\n                    })(\r\n                        <Input.Password prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}} />} placeholder=\"密码\" />\r\n                        // <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    {getFieldDecorator('randio', {\r\n                        initialValue: '1',\r\n                        validator: this.checkSex\r\n                    })(\r\n                        <Radio.Group>\r\n                            <Radio value=\"1\">男</Radio>\r\n                            <Radio value=\"0\">女</Radio>\r\n                        </Radio.Group>,\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    {getFieldDecorator('remember', {\r\n                        valuePropName: 'checked',\r\n                        initialValue: true,\r\n                    })(\r\n                        <Checkbox>Remember me</Checkbox>\r\n                    )}\r\n                    <a className=\"login-form-forgot\" href=\"www.baidu.com\" style={{ float: 'right' }}>Forgot password</a>\r\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ width: '100%' }}>\r\n                        Log in\r\n                    </Button>\r\n                    <Button type=\"primary\" style={{ width: '100%' }} onClick={this.resetForm}>重置</Button>\r\n                    <Button type=\"primary\" style={{ width: '100%' }} onClick={this.getField}>获取</Button>\r\n                    <Button type=\"primary\" style={{ width: '100%' }} onClick={this.getError}>获取错误</Button>\r\n                    Or <a href=\"www.baidu.com\">register now!</a>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nconst WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(NormalLoginForm);\r\n\r\nconst { Option } = Select;\r\nconst AutoCompleteOption = AutoComplete.Option;\r\n\r\nconst residences = [{\r\n    value: 'zhejiang',\r\n    label: 'Zhejiang',\r\n    children: [{\r\n        value: 'hangzhou',\r\n        label: 'Hangzhou',\r\n        children: [{\r\n            value: 'xihu',\r\n            label: 'West Lake',\r\n        }],\r\n    }],\r\n}, {\r\n    value: 'jiangsu',\r\n    label: 'Jiangsu',\r\n    children: [{\r\n        value: 'nanjing',\r\n        label: 'Nanjing',\r\n        children: [{\r\n            value: 'zhonghuamen',\r\n            label: 'Zhong Hua Men',\r\n        }],\r\n    }],\r\n}];\r\n\r\nclass RegistrationForm extends React.Component {\r\n    state = {\r\n        confirmDirty: false,\r\n        autoCompleteResult: [],\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            if (!err) {\r\n                console.log('Received values of form: ', values);\r\n            }\r\n        });\r\n    }\r\n\r\n    handleConfirmBlur = (e) => {\r\n        const value = e.target.value;\r\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n    }\r\n\r\n    compareToFirstPassword = (rule, value, callback) => {\r\n        const form = this.props.form;\r\n        if (value && value !== form.getFieldValue('password')) {\r\n            callback('Two passwords that you enter is inconsistent!');\r\n        } else {\r\n            callback();\r\n        }\r\n    }\r\n\r\n    validateToNextPassword = (rule, value, callback) => {\r\n        const form = this.props.form;\r\n        if (value && this.state.confirmDirty) {\r\n            form.validateFields(['confirm'], { force: true });\r\n        }\r\n        callback();\r\n    }\r\n\r\n    handleWebsiteChange = (value) => {\r\n        let autoCompleteResult;\r\n        if (!value) {\r\n            autoCompleteResult = [];\r\n        } else {\r\n            autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\r\n        }\r\n        this.setState({ autoCompleteResult });\r\n    }\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        const { autoCompleteResult } = this.state;\r\n\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 8 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 16 },\r\n            },\r\n        };\r\n        const tailFormItemLayout = {\r\n            wrapperCol: {\r\n                xs: {\r\n                    span: 24,\r\n                    offset: 0,\r\n                },\r\n                sm: {\r\n                    span: 16,\r\n                    offset: 8,\r\n                },\r\n            },\r\n        };\r\n        const prefixSelector = getFieldDecorator('prefix', {\r\n            initialValue: '86',\r\n        })(\r\n            <Select style={{ width: 70 }}>\r\n                <Option value=\"86\">+86</Option>\r\n                <Option value=\"87\">+87</Option>\r\n            </Select>\r\n        );\r\n\r\n        const websiteOptions = autoCompleteResult.map(website => (\r\n            <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\r\n        ));\r\n\r\n        return (\r\n            <Form {...formItemLayout} onSubmit={this.handleSubmit}>\r\n                <Form.Item\r\n                    label=\"E-mail\" colon={false} extra=\"extra是啥\" help=\"help是啥\" validateStatus=\"error\" hasFeedback\r\n                >\r\n                    {getFieldDecorator('email', {\r\n                        rules: [{\r\n                            type: 'email', message: 'The input is not valid E-mail!',\r\n                        }, {\r\n                            required: true, message: 'Please input your E-mail!',\r\n                        }],\r\n                    })(\r\n                        <Input />\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"Password\"\r\n                >\r\n                    {getFieldDecorator('password', {\r\n                        rules: [{\r\n                            required: true, message: 'Please input your password!',\r\n                        }, {\r\n                            validator: this.validateToNextPassword,\r\n                        }],\r\n                    })(\r\n                        <Input type=\"password\" />\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"Confirm Password\"\r\n                >\r\n                    {getFieldDecorator('confirm', {\r\n                        rules: [{\r\n                            required: true, message: 'Please confirm your password!',\r\n                        }, {\r\n                            validator: this.compareToFirstPassword,\r\n                        }],\r\n                    })(\r\n                        <Input type=\"password\" onBlur={this.handleConfirmBlur} />\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label={(\r\n                        <span>\r\n                            Nickname&nbsp;\r\n              <Tooltip title=\"What do you want others to call you?\">\r\n                                <Icon type=\"question-circle-o\" />\r\n                            </Tooltip>\r\n                        </span>\r\n                    )}\r\n                >\r\n                    {getFieldDecorator('nickname', {\r\n                        rules: [{ required: true, message: 'Please input your nickname!', whitespace: true }],\r\n                    })(\r\n                        <Input />\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"Habitual Residence\"\r\n                >\r\n                    {getFieldDecorator('residence', {\r\n                        initialValue: ['zhejiang', 'hangzhou', 'xihu'],\r\n                        rules: [{ type: 'array', required: true, message: 'Please select your habitual residence!' }],\r\n                    })(\r\n                        <Cascader options={residences} />\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"Phone Number\"\r\n                >\r\n                    {getFieldDecorator('phone', {\r\n                        rules: [{ required: true, message: 'Please input your phone number!' }],\r\n                    })(\r\n                        <Input addonBefore={prefixSelector} style={{ width: '100%' }} />\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"Website\"\r\n                >\r\n                    {getFieldDecorator('website', {\r\n                        rules: [{ required: true, message: 'Please input website!' }],\r\n                    })(\r\n                        <AutoComplete\r\n                            dataSource={websiteOptions}\r\n                            onChange={this.handleWebsiteChange}\r\n                            placeholder=\"website\"\r\n                        >\r\n                            <Input />\r\n                        </AutoComplete>\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"Captcha\"\r\n                    extra=\"We must make sure that your are a human.\"\r\n                >\r\n                    <Row gutter={8}>\r\n                        <Col span={12}>\r\n                            {getFieldDecorator('captcha', {\r\n                                rules: [{ required: true, message: 'Please input the captcha you got!' }],\r\n                            })(\r\n                                <Input />\r\n                            )}\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <Button>Get captcha</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Form.Item>\r\n                <Form.Item {...tailFormItemLayout}>\r\n                    {getFieldDecorator('agreement', {\r\n                        valuePropName: 'checked',\r\n                    })(\r\n                        <Checkbox>I have read the <a href=\"www.baidu.com\">agreement</a></Checkbox>\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item {...tailFormItemLayout}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">Register</Button>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nconst WrappedRegistrationForm = Form.create({ name: 'register' })(RegistrationForm);\r\n\r\nlet id = 0;\r\n\r\nclass DynamicFieldSet extends React.Component {\r\n    remove = (k) => {\r\n        const { form } = this.props;\r\n        // can use data-binding to get\r\n        const keys = form.getFieldValue('keys');\r\n        // We need at least one passenger\r\n        if (keys.length === 1) {\r\n            return;\r\n        }\r\n\r\n        // can use data-binding to set\r\n        form.setFieldsValue({\r\n            keys: keys.filter(key => key !== k),\r\n        });\r\n    }\r\n\r\n    add = () => {\r\n        const { form } = this.props;\r\n        // can use data-binding to get\r\n        const keys = form.getFieldValue('keys');\r\n        console.log(keys)\r\n        const nextKeys = keys.concat(id++);\r\n        // can use data-binding to set\r\n        // important! notify form to detect changes\r\n        form.setFieldsValue({\r\n            keys: nextKeys,\r\n        });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                const { keys, names } = values;\r\n                console.log('Received values of form: ', values);\r\n                console.log('Merged values:', keys.map(key => names[key]));\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { getFieldDecorator, getFieldValue } = this.props.form;\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 4 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 20 },\r\n            },\r\n        };\r\n        const formItemLayoutWithOutLabel = {\r\n            wrapperCol: {\r\n                xs: { span: 24, offset: 0 },\r\n                sm: { span: 20, offset: 4 },\r\n            },\r\n        };\r\n        getFieldDecorator('keys', { initialValue: [] });\r\n        const keys = getFieldValue('keys');\r\n        const formItems = keys.map((k, index) => (\r\n            <Form.Item\r\n                {...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel)}\r\n                label={index === 0 ? 'Passengers' : ''}\r\n                required={false}\r\n                key={k}\r\n            >\r\n                {getFieldDecorator(`names[${k}]`, {\r\n                    validateTrigger: ['onChange', 'onBlur'],\r\n                    rules: [{\r\n                        required: true,\r\n                        whitespace: true,\r\n                        message: \"Please input passenger's name or delete this field.\",\r\n                    }],\r\n                })(\r\n                    <Input placeholder=\"passenger name\" style={{ width: '60%', marginRight: 8 }} />\r\n                )}\r\n                {keys.length > 1 ? (\r\n                    <Icon\r\n                        className=\"dynamic-delete-button\"\r\n                        type=\"minus-circle-o\"\r\n                        onClick={() => this.remove(k)}\r\n                    />\r\n                ) : null}\r\n            </Form.Item>\r\n        ));\r\n        return (\r\n            <Form onSubmit={this.handleSubmit}>\r\n                {formItems}\r\n                <Form.Item {...formItemLayoutWithOutLabel}>\r\n                    <Button type=\"dashed\" onClick={this.add} style={{ width: '60%' }}>\r\n                        <Icon type=\"plus\" /> Add field\r\n          </Button>\r\n                </Form.Item>\r\n                <Form.Item {...formItemLayoutWithOutLabel}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">Submit</Button>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nconst WrappedDynamicFieldSet = Form.create({ name: 'dynamic_form_item' })(DynamicFieldSet);\r\n\r\nclass AntdForm extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>水平表单</h1>\r\n                    <p>\r\n                        水平登录栏，常用于顶部导航中\r\n                    </p>\r\n                    <div className=\"antd-demo-content\">\r\n                        <WrappedHorizontalLoginForm />\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>登录表单</h1>\r\n                    <div className=\"antd-demo-content\" style={{ width: '300px' }}>\r\n                        <WrappedNormalLoginForm />\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>注册表单</h1>\r\n                    <div className=\"antd-demo-content\" style={{ width: '500px' }}>\r\n                        <WrappedRegistrationForm />\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>动态表单</h1>\r\n                    <div className=\"antd-demo-content\">\r\n                        <WrappedDynamicFieldSet />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AntdForm\r\n","import React from 'react'\r\nimport { Button, Divider, Avatar, } from 'antd'\r\n\r\nclass AntdData extends React.Component {\r\n    render(){\r\n        return (\r\n            <div>\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>头像</h1>\r\n                    <p></p>\r\n                    <div className=\"antd-demo-content\">\r\n                        <Avatar icon=\"user\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AntdData\r\n","import React from 'react';\r\nimport {\r\n    Divider,\r\n    Form,\r\n    Input,\r\n    Button,\r\n    Checkbox,\r\n    Table,\r\n    Tag,\r\n    Modal,\r\n} from 'antd';\r\n\r\nconst { Column } = Table;\r\n\r\nconst columns = [{\r\n    title: 'Name',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n    render: text => <a href=\"www.baidu.com\">{text}</a>,\r\n    filters: [{\r\n        text: 'Joe',\r\n        value: 'Joe',\r\n    }, {\r\n        text: 'Jim',\r\n        value: 'Jim',\r\n    }, {\r\n        text: 'Submenu',\r\n        value: 'Submenu',\r\n        children: [{\r\n            text: 'Green',\r\n            value: 'Green',\r\n        }, {\r\n            text: 'Black',\r\n            value: 'Black',\r\n        }],\r\n    }],\r\n    // specify the condition of filtering result\r\n    // here is that finding the name started with `value`\r\n    onFilter: (value, record) => record.name.indexOf(value) === 0,\r\n    sorter: (a, b) => a.name.length - b.name.length,\r\n    sortDirections: ['descend'],\r\n}, {\r\n    title: 'Age',\r\n    dataIndex: 'age',\r\n    key: 'age',\r\n    defaultSortOrder: 'descend',\r\n    sorter: (a, b) => a.age - b.age,\r\n}, {\r\n    title: 'Address',\r\n    dataIndex: 'address',\r\n    key: 'address',\r\n    filters: [{\r\n        text: 'London',\r\n        value: 'London',\r\n    }, {\r\n        text: 'New York',\r\n        value: 'New York',\r\n    }],\r\n    filterMultiple: false,\r\n    onFilter: (value, record) => record.address.indexOf(value) === 0,\r\n    sorter: (a, b) => a.address.length - b.address.length,\r\n    sortDirections: ['descend', 'ascend'],\r\n}, {\r\n    title: 'Tags',\r\n    key: 'tags',\r\n    dataIndex: 'tags',\r\n    render: tags => (\r\n        <span>\r\n            {tags.map(tag => {\r\n                let color = tag.length > 5 ? 'geekblue' : 'green';\r\n                if (tag === 'loser') {\r\n                    color = 'volcano';\r\n                }\r\n                return <Tag color={color} key={tag}>{tag.toUpperCase()}</Tag>;\r\n            })}\r\n        </span>\r\n    ),\r\n}, {\r\n    title: 'Action',\r\n    key: 'action',\r\n    render: (text, record) => (\r\n        <span>\r\n            <a href=\"www.baidu.com\" onClick={e => { e.preventDefault();console.log(text) }}>Invite {record.name}</a>\r\n            <Divider type=\"vertical\" />\r\n            <a href=\"www.baidu.com\" onClick={e => { e.preventDefault();console.log(text) }}>Delete</a>\r\n        </span>\r\n    ),\r\n}];\r\n\r\nconst data = [{\r\n    key: '1',\r\n    name: 'John Brown',\r\n    age: 32,\r\n    address: 'New York No. 1 Lake Park',\r\n    tags: ['nice', 'developer'],\r\n}, {\r\n    key: '2',\r\n    name: 'Jim Green',\r\n    age: 42,\r\n    address: 'London No. 1 Lake Park',\r\n    tags: ['loser'],\r\n}, {\r\n    key: '4',\r\n    name: 'Lili Green',\r\n    age: 23,\r\n    address: 'London No. 1 Lake Park',\r\n    tags: ['loser'],\r\n}, {\r\n    key: '3',\r\n    name: 'Joe Black',\r\n    age: 32,\r\n    address: 'Sidney No. 1 Lake Park',\r\n    tags: ['cool', 'teacher'],\r\n    children: [\r\n        {\r\n            key: '301',\r\n            name: '你猜',\r\n            age: 22,\r\n            address: '浙江省杭州市',\r\n            tags: ['标签1', '标签2']\r\n        }\r\n    ]\r\n}];\r\n\r\nfunction onChange(pagination, filters, sorter) {\r\n    console.log('params', pagination, filters, sorter);\r\n}\r\n\r\n// demo-2\r\nconst userList = [{\r\n    key: '1',\r\n    firstName: 'John',\r\n    lastName: 'Brown',\r\n    age: 32,\r\n    address: 'New York No. 1 Lake Park',\r\n    tags: ['nice', 'developer'],\r\n}, {\r\n    key: '2',\r\n    firstName: 'Jim',\r\n    lastName: 'Green',\r\n    age: 42,\r\n    address: 'London No. 1 Lake Park',\r\n    tags: ['loser'],\r\n}, {\r\n    key: '3',\r\n    firstName: 'Joe',\r\n    lastName: 'Black',\r\n    age: 32,\r\n    address: 'Sidney No. 1 Lake Park',\r\n    tags: ['cool', 'teacher'],\r\n}];\r\n\r\n// rowSelection object indicates the need for row selection\r\nconst rowSelection = {\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n        console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n    },\r\n    getCheckboxProps: record => ({\r\n        disabled: record.name === 'Disabled User', // Column configuration not to be checked\r\n        name: record.name,\r\n    }),\r\n};\r\n\r\nclass UserTable extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            title: '用户列表',\r\n            loading: false,\r\n            selectedRowKeys: [],\r\n            modalVisible: false\r\n        }\r\n    }\r\n\r\n    start = () => {\r\n        this.setState({\r\n            loading: true\r\n        })\r\n        setTimeout(() => {\r\n            this.setState({\r\n                loading: false,\r\n                selectedRowKeys: []\r\n            })\r\n        }, 1000);\r\n    }\r\n\r\n    onSelectedChange = selectedRowKeys => {\r\n        this.setState({\r\n            selectedRowKeys\r\n        })\r\n    }\r\n\r\n    showModal = (record, e) => {\r\n        const { form: { setFieldsValue } } = this.props;\r\n        e.preventDefault();\r\n\r\n        setFieldsValue(record);\r\n        this.setState({\r\n            modalVisible: true\r\n        });\r\n    }\r\n\r\n    handleOk = () => {\r\n        const { form: { validateFields } } = this.props;\r\n        let currentUser = 0;\r\n        this.setState({\r\n            modalVisible: false,\r\n        });\r\n        validateFields((err, values) => {\r\n            if (!err) {\r\n                userList.forEach((item, index) => {\r\n                    if(item.key === values.key){\r\n                        currentUser = index;\r\n                    }\r\n                })\r\n                userList.splice(currentUser, 1, values)\r\n            }\r\n        });\r\n    }\r\n\r\n    handleCancel = () => {\r\n        this.setState({\r\n            modalVisible: false,\r\n        });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        const { form: { validateFields } } = this.props;\r\n        e.preventDefault();\r\n        validateFields((err, values) => {\r\n            if (!err) {\r\n                console.log('Received values of form: ', values);\r\n            }\r\n        });\r\n    }\r\n\r\n    deleteUser = (index, e) => {\r\n        e.preventDefault();\r\n        userList.splice(index, 1);\r\n        console.log(userList);\r\n    }\r\n\r\n    render() {\r\n        const { loading, selectedRowKeys } = this.state;\r\n        const { form: { getFieldDecorator } } = this.props\r\n        const rowSelection = {\r\n            selectedRowKeys,\r\n            onChange: this.onSelectedChange,\r\n            hideDefaultSelections: true,\r\n            selections: [\r\n                {\r\n                    key: 'all-data',\r\n                    text: '全部选中',\r\n                    onSelect: () => {\r\n                        this.setState({\r\n                            selectedRowKeys: [...Array(46).keys()], // 0...45\r\n                        });\r\n                    },\r\n                },\r\n                {\r\n                    key: 'odd',\r\n                    text: 'Select Odd Row',\r\n                    onSelect: (changableRowKeys) => {\r\n                        let newSelectedRowKeys = [];\r\n                        newSelectedRowKeys = changableRowKeys.filter((key, index) => {\r\n                            if (index % 2 !== 0) {\r\n                                return false;\r\n                            }\r\n                            return true;\r\n                        });\r\n                        this.setState({ selectedRowKeys: newSelectedRowKeys });\r\n                    },\r\n                },\r\n                {\r\n                    key: 'even',\r\n                    text: 'Select Even Row',\r\n                    onSelect: (changableRowKeys) => {\r\n                        let newSelectedRowKeys = [];\r\n                        newSelectedRowKeys = changableRowKeys.filter((key, index) => {\r\n                            if (index % 2 !== 0) {\r\n                                return true;\r\n                            }\r\n                            return false;\r\n                        });\r\n                        this.setState({ selectedRowKeys: newSelectedRowKeys });\r\n                    },\r\n                }\r\n            ]\r\n        }\r\n        const hasSelected = selectedRowKeys.length > 0;\r\n        const { modalVisible } = this.state;\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 8 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 16 },\r\n            },\r\n        };\r\n        const tagOptions = [\r\n            { label: 'developer', value:'developer' },\r\n            { label: 'loser', value:'loser' },\r\n            { label: 'teacher', value:'teacher' },\r\n            { label: 'cool', value:'cool' },\r\n            { label: 'nice', value:'nice' },\r\n            { label: 'student', value:'student' },\r\n        ]\r\n        return (\r\n            <div>\r\n                <div style={{ marginBottom: '16px' }}>\r\n                    <Button type=\"primary\" onClick={this.start} disabled={!hasSelected} loading={loading}>Reload</Button>\r\n                    <span style={{ marginLeft: '16px' }}>{hasSelected && `选择了${selectedRowKeys.length}项`}</span>\r\n                </div>\r\n                <Table\r\n                    bordered\r\n                    size=\"middle\"\r\n                    dataSource={userList}\r\n                    rowSelection={rowSelection}\r\n                    title={() => 'Header'}\r\n                    footer={() => 'Footer'}\r\n                    expandedRowRender={record => <p style={{ margin: 0 }}>{record.address}</p>}\r\n                >\r\n                    {/* <ColumnGroup title=\"Name\">\r\n                        <Column\r\n                            title=\"First Name\"\r\n                            dataIndex=\"firstName\"\r\n                            key=\"firstName\"\r\n                        />\r\n                        <Column\r\n                            title=\"Last Name\"\r\n                            dataIndex=\"lastName\"\r\n                            key=\"lastName\"\r\n                        />\r\n                    </ColumnGroup> */}\r\n                    <Column title=\"Name\" dataIndex=\"firstName\" key=\"firstName\" colSpan={2} />\r\n                    <Column title=\"Name\" dataIndex=\"lastName\" key=\"lastName\" colSpan={0} />\r\n                    <Column\r\n                        title=\"Age\"\r\n                        dataIndex=\"age\"\r\n                        key=\"age\"\r\n                    />\r\n                    <Column\r\n                        title=\"Address\"\r\n                        dataIndex=\"address\"\r\n                        key=\"address\"\r\n                    />\r\n                    <Column\r\n                        title=\"Tags\"\r\n                        dataIndex=\"tags\"\r\n                        key=\"tags\"\r\n                        render={tags => (\r\n                            <span>\r\n                                {tags.map(tag => <Tag color=\"blue\" key={tag}>{tag}</Tag>)}\r\n                            </span>\r\n                        )}\r\n                    />\r\n                    <Column\r\n                        title=\"Action\"\r\n                        key=\"action\"\r\n                        render={(text, record, index) => (\r\n                            <span>\r\n                                <a href=\"www.baidu.com\" onClick={e => { this.showModal(record, e) }}>编辑</a>\r\n                                <Divider type=\"vertical\" />\r\n                                <a href=\"www.baidu.com\"  onClick={e => { this.deleteUser(index, e) }}>删除</a>\r\n                            </span>\r\n                        )}\r\n                    />\r\n                </Table>\r\n                <Modal\r\n                    title=\"编辑\"\r\n                    visible={modalVisible}\r\n                    onOk={this.handleOk}\r\n                    onCancel={this.handleCancel}\r\n                >\r\n                    <div style={{ width: '400px' }}>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Form.Item {...formItemLayout} label=\"ID\">\r\n                                {getFieldDecorator('key', {\r\n                                    rules: [{ required: true, message: '请填写id' }],\r\n                                })(\r\n                                    <Input placeholder=\"ID\" disabled />,\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item {...formItemLayout} label=\"姓名\">\r\n                                {getFieldDecorator('firstName')(\r\n                                    <Input placeholder=\"姓名\" />,\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item {...formItemLayout} label=\"姓名\">\r\n                                {getFieldDecorator('lastName')(\r\n                                    <Input placeholder=\"姓名\" />,\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item {...formItemLayout} label=\"年龄\">\r\n                                {getFieldDecorator('age', {\r\n                                    rules: [{ required: true, message: '请填写年龄' }],\r\n                                })(\r\n                                    <Input type=\"number\" placeholder=\"年龄\" />,\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item {...formItemLayout} label=\"住址\">\r\n                                {getFieldDecorator('address')(\r\n                                    <Input placeholder=\"住址\" />,\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item {...formItemLayout} label=\"标签\">\r\n                                {getFieldDecorator('tags')(\r\n                                    <Checkbox.Group options={tagOptions} />\r\n                                )}\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst UserTableForm = Form.create({ name: 'user_table_form' })(UserTable);\r\n\r\nclass AntdTable extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            students: [\r\n                {\r\n                    id: 0,\r\n                    name: '李雷'\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>表格</h1>\r\n                    <p>\r\n                    </p>\r\n                    <div className=\"antd-demo-content\">\r\n                        <Table columns={columns} dataSource={data} onChange={onChange} rowSelection={rowSelection} />\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>jsx风格</h1>\r\n                    <div className=\"antd-demo-content\">\r\n                        <UserTableForm />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AntdTable\r\n","import React from 'react'\r\nimport moment from 'moment'\r\nimport { Alert, Icon, Button, Divider, Avatar, Badge, Tabs, Tag, Timeline, Tooltip, Statistic, Card, Popover, List, Typography, Empty, Calendar, } from 'antd'\r\n\r\nconst ListData = [\r\n    'Racing car sprays burning fuel into crowd.',\r\n    'Japanese princess to wed commoner.',\r\n    'Australian walks 100km after outback crash.',\r\n    'Man charged over missing wedding girl.',\r\n    'Los Angeles battles huge wildfires.',\r\n];\r\nconst content = (\r\n    <div>\r\n        <p>Content</p>\r\n        <p>Content</p>\r\n    </div>\r\n);\r\nconst deadline = Date.now() + 1000 * 60 * 60 * 24 * 2 + 1000 * 3\r\nconst operations = <Button>Extra Action</Button>;\r\n\r\nclass AntdMenu extends React.Component {\r\n    state = {\r\n        date: moment('2017-01-23'),\r\n        selectedDate: moment('2017-01-23'),\r\n        tagChecked: true\r\n    }\r\n    handleCalendarPanelChange = (value, mode) => {\r\n        console.log(value, mode)\r\n        this.setState({ date: value })\r\n    }\r\n    handleCalendarSelect = value => {\r\n        this.setState({\r\n            date: value,\r\n            selectedDate: value\r\n        })\r\n    }\r\n    handleTagClose = e => {\r\n        console.log('关闭标签')\r\n    }\r\n    handleTagChange = tagChecked => {\r\n        this.setState({ tagChecked })\r\n    }\r\n    handleTabsChanage = key => {\r\n        console.log(`切换标签页${key}`)\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>avatar-头像</h1>\r\n                    <p></p>\r\n                    <div className=\"antd-demo-content\">\r\n                        <Avatar icon=\"user\" />\r\n                        <Avatar icon=\"user\" size=\"large\" />\r\n                        <Avatar icon=\"user\" shape=\"square\" style={{ backgroundColor: '#f56a00' }} />\r\n                        <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n                        <Badge count={1}>\r\n                            <Avatar style={{ color: '#f56a00', backgroundColor: '#fde3cf' }} shape=\"square\">U</Avatar>\r\n                        </Badge>\r\n                        <Badge dot>\r\n                            <Avatar style={{ color: '#f56a00', backgroundColor: '#fde3cf' }} shape=\"square\">U</Avatar>\r\n                        </Badge>\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>badge-徽记</h1>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>comment-评论</h1>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>collapse-折叠面板</h1>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>carousel-走马灯</h1>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>card-卡片</h1>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>calendar-日历</h1>\r\n                    <div className=\"antd-demo-content\">\r\n                        <div className=\"calendar-box\" style={{ width: 300, border: '1px solid #d9d9d9', borderRadius: 4 }}>\r\n                            <Alert\r\n                                message={`You selected date: ${this.state.selectedDate && this.state.selectedDate.format('YYYY-MM-DD')}`}\r\n                            />\r\n                            <Calendar fullscreen={false} onPanelChange={this.handleCalendarPanelChange} onSelect={this.handleCalendarSelect} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>empty-空状态</h1>\r\n                    <div className=\"antd-demo-content\">\r\n                        <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                        <Empty\r\n                            image=\"https://gw.alipayobjects.com/mdn/miniapp_social/afts/img/A*pevERLJC9v0AAAAAAAAAAABjAQAAAQ/original\"\r\n                            imageStyle={{ height: 60 }}\r\n                            description={\r\n                                <span>\r\n                                    Cusc\r\n                                </span>\r\n                            }\r\n                        >\r\n                            <Button type=\"primary\">Create Now</Button>\r\n                        </Empty>\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>list-列表</h1>\r\n                    <div className=\"antd-demo-content\">\r\n                        <List size=\"small\" header={<div>Header</div>} footer={<div>footer</div>} bordered dataSource={ListData} renderItem={item => (\r\n                            <List.Item>\r\n                                <Typography.Text mark>[ITEM]</Typography.Text> {item}\r\n                            </List.Item>\r\n                        )}></List>\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>popover-气泡卡片</h1>\r\n                    <div className=\"antd-demo-content\">\r\n                        <Popover title=\"气泡卡片\" content={content} placement=\"bottomLeft\" trigger=\"click\" arrowPointAtCenter>\r\n                            <Button type=\"primary\">Hover me</Button>\r\n                        </Popover>\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>statistic</h1>\r\n                    <p></p>\r\n                    <div className=\"antd-demo-box\">\r\n                        <Statistic title=\"Active Users\" value={112122} precision={2} />\r\n                        <Card>\r\n                            <Statistic title=\"Active\" value={11.23} precision={2} valueStyle={{ color: '#3f8600' }} prefix={<Icon type=\"arrow-up\" />} suffix=\"%\" />\r\n                        </Card>\r\n                        <Statistic.Countdown title=\"倒计时\" value={deadline} />\r\n                        <Statistic.Countdown title=\"毫秒\" value={deadline} format=\"HH:mm:ss:SSS\" />\r\n                        <Statistic.Countdown title=\"天\" value={deadline} format=\"D 天 H 时 m 分 s 秒\" />\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>tooltip-文字提示</h1>\r\n                    <p></p>\r\n                    <div className=\"antd-demo-content\">\r\n                        <Tooltip title=\"文字提示\" placement=\"topLeft\">\r\n                            <span>Tooltip will show on mouse enter.</span>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"文字提示\" placement=\"topRight\" arrowPointAtCenter>\r\n                            <span>Tooltip will show on mouse enter.</span>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"文字提示\" placement=\"topLeft\" arrowPointAtCenter>\r\n                            <span>Tooltip will show on mouse enter.</span>\r\n                        </Tooltip>\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>timelie-时间轴</h1>\r\n                    <p></p>\r\n                    <div className=\"antd-demo-content\">\r\n                        <Timeline pending=\"Recording...\" reverse={true} mode=\"alternate\">\r\n                            <Timeline.Item color=\"green\">1</Timeline.Item>\r\n                            <Timeline.Item color=\"red\">2</Timeline.Item>\r\n                            <Timeline.Item dot={<Icon type=\"clock-circle-o\" style={{ fontSize: '16px' }} />} color=\"red\">\r\n                                Technical testing 2015-09-01\r\n                            </Timeline.Item>\r\n                            <Timeline.Item>3</Timeline.Item>\r\n                        </Timeline>\r\n                    </div>\r\n                </div>\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>标签</h1>\r\n                    <p></p>\r\n                    <div className=\"antd-demo-content\">\r\n                        <Tag color=\"geekblue\" closable onClose={this.handleTagClose}>Tag 1</Tag>\r\n                        <Tag color=\"#87d068\">#87d068</Tag>\r\n                        <Tag.CheckableTag checked={this.state.tagChecked} onChange={this.handleTagChange}>可选标签</Tag.CheckableTag>\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>tab-标签页</h1>\r\n                    <div className=\"antd-demo-content\">\r\n                        <Tabs type=\"card\" defaultActiveKey=\"1\" tabPosition=\"top\" onChange={this.handleTabsChanage} style={{ height: '220px' }} tabBarExtraContent={operations}>\r\n                            <Tabs.TabPane tab=\"标签1\" key=\"1\">11111111</Tabs.TabPane>\r\n                            <Tabs.TabPane tab=\"标签2\" key=\"2\">2</Tabs.TabPane>\r\n                            <Tabs.TabPane tab=\"标签3\" key=\"3\" disabled>3</Tabs.TabPane>\r\n                            <Tabs.TabPane tab={<span><Icon type=\"apple\" />Apple</span>} key=\"4\">苹果</Tabs.TabPane>\r\n                            <Tabs.TabPane tab={<span><Icon type=\"android\" />Android</span>} key=\"5\">安卓</Tabs.TabPane>\r\n                        </Tabs>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AntdMenu\r\n","import React from 'react'\r\nimport {\r\n    Icon,\r\n    Button,\r\n    Select,\r\n    Divider,\r\n    Alert,\r\n    Drawer,\r\n    Radio,\r\n    Modal,\r\n    message,\r\n    notification,\r\n    Progress,\r\n    Popconfirm,\r\n    Spin,\r\n    Skeleton,\r\n    Switch\r\n} from 'antd'\r\nimport './AntdAlert.scss'\r\n\r\nconst { Option } = Select\r\nconst onClose = e => {\r\n    console.log(e, 'I was closed.')\r\n}\r\nconst options = ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']\r\n\r\nclass AntdAlert extends React.Component {\r\n    state = {\r\n        drawerVisible: false,\r\n        drawerPlacement: 'left',\r\n        modalVisible: false,\r\n        percent: 0,\r\n        loading: false\r\n    }\r\n    showDrawer = () => {\r\n        this.setState({\r\n            drawerVisible: true\r\n        })\r\n    }\r\n    handleDrawerClose = () => {\r\n        this.setState({\r\n            drawerVisible: false\r\n        })\r\n    }\r\n    handleDrawerPlacementChange = e => {\r\n        this.setState({\r\n            drawerPlacement: e.target.value\r\n        })\r\n    }\r\n    showModal = () => {\r\n        this.setState({\r\n            modalVisible: true\r\n        })\r\n    }\r\n    handleModalOk = () => {\r\n        this.setState({\r\n            modalVisible: false\r\n        })\r\n    }\r\n    handleModalCancel = () => {\r\n        this.setState({\r\n            modalVisible: false\r\n        })\r\n    }\r\n    showMessage = () => {\r\n        // message.info('通过message发送全局提示', 5)\r\n        // message.warning('通过message发送全局提示')\r\n        // message\r\n        //     .loading('Action in progress..', 2.5)\r\n        //     .then(() => message.success('Loading finished', 2.5))\r\n        //     .then(() => message.error('Loading finished is finished', 2.5));\r\n        const hide = message.loading('Action in progress..', 0)\r\n        // Dismiss manually and asynchronously\r\n        setTimeout(hide, 2500)\r\n    }\r\n    showNotification = () => {\r\n        const key = `open${Date.now()}`\r\n        const btn = (\r\n            <Button\r\n                type=\"primary\"\r\n                size=\"small\"\r\n                onClick={() => notification.close(key)}\r\n            >\r\n                Confirm\r\n            </Button>\r\n        )\r\n        notification.success({\r\n            duration: 0,\r\n            message: 'notification通知',\r\n            description: '详细描述',\r\n            key,\r\n            btn,\r\n            icon: <Icon type=\"smile\" style={{ color: '#108ee9' }} />,\r\n            style: {\r\n                width: 600,\r\n                marginLeft: 335 - 600\r\n            },\r\n            onClick: () => {\r\n                console.log('点击notification通知')\r\n            }\r\n        })\r\n        setTimeout(() => {\r\n            notification.info({\r\n                key,\r\n                message: '通过唯一的key修改内容'\r\n            })\r\n        }, 1000)\r\n    }\r\n    increase = () => {\r\n        let percent = this.state.percent + 10\r\n        if (percent > 100) {\r\n            percent = 100\r\n        }\r\n        this.setState({ percent })\r\n    }\r\n    decline = () => {\r\n        let percent = this.state.percent - 10\r\n        if (percent < 0) {\r\n            percent = 0\r\n        }\r\n        this.setState({ percent })\r\n    }\r\n    handlePopconfirmConfirm = () => {\r\n        console.log('yes')\r\n        message.success('yes')\r\n    }\r\n    handlePopconfirmCancel = () => {\r\n        console.log('no')\r\n        message.error('no')\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>alert-警告提示</h1>\r\n                    <p />\r\n                    <div className=\"antd-demo-content\">\r\n                        <Alert message=\"SUCCESS text\" type=\"success\" />\r\n                        <Alert\r\n                            message=\"alert消息\"\r\n                            description=\"alert详细描述\"\r\n                            type=\"error\"\r\n                            closable\r\n                            onClose={onClose}\r\n                        />\r\n                        <Alert\r\n                            message=\"alert消息\"\r\n                            description=\"alert详细描述\"\r\n                            type=\"error\"\r\n                            closable\r\n                            onClose={onClose}\r\n                            closeText=\"关闭\"\r\n                        />\r\n                        <Alert\r\n                            message=\"alert消息\"\r\n                            description=\"alert详细描述\"\r\n                            type=\"info\"\r\n                            showIcon\r\n                            banner\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box demo\">\r\n                    <h1>drawer-抽屉</h1>\r\n                    <p />\r\n                    <div className=\"antd-demo-content\">\r\n                        <Radio.Group\r\n                            defaultValue={this.state.drawerPlacement}\r\n                            onChange={this.handleDrawerPlacementChange}\r\n                            style={{ marginRight: '8px' }}\r\n                        >\r\n                            <Radio value=\"top\">上</Radio>\r\n                            <Radio value=\"right\">右</Radio>\r\n                            <Radio value=\"bottom\">下</Radio>\r\n                            <Radio value=\"left\">左</Radio>\r\n                        </Radio.Group>\r\n                        <Button type=\"primary\" onClick={this.showDrawer}>\r\n                            打开抽屉\r\n                        </Button>\r\n                        <Drawer\r\n                            title=\"drawer\"\r\n                            placement={this.state.drawerPlacement}\r\n                            onClose={this.handleDrawerClose}\r\n                            visible={this.state.drawerVisible}\r\n                            closable={false}\r\n                        >\r\n                            <p>111111</p>\r\n                            <p>111111</p>\r\n                            <p>111111</p>\r\n                        </Drawer>\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>modal-对话框</h1>\r\n                    <p />\r\n                    <div className=\"antd-demo-content\">\r\n                        <Button type=\"primary\" onClick={this.showModal}>\r\n                            打开对话框\r\n                        </Button>\r\n                        <Modal\r\n                            title=\"对话框\"\r\n                            visible={this.state.modalVisible}\r\n                            onOk={this.handleModalOk}\r\n                            onCancel={this.handleModalCancel}\r\n                        >\r\n                            <p>111111111</p>\r\n                            <p>111111111</p>\r\n                            <p>111111111</p>\r\n                            <p>111111111</p>\r\n                        </Modal>\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>message-全局提示</h1>\r\n                    <p />\r\n                    <div className=\"antd-demo-content\">\r\n                        <Button type=\"primary\" onClick={this.showMessage}>\r\n                            发送提示\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>nitification-通知提醒框</h1>\r\n                    <p />\r\n                    <div className=\"antd-demo-content\">\r\n                        <Select\r\n                            defaultValue=\"topRight\"\r\n                            style={{ width: 120, marginRight: 10 }}\r\n                            onChange={val => {\r\n                                notification.config({\r\n                                    placement: val\r\n                                })\r\n                            }}\r\n                        >\r\n                            {options.map(val => (\r\n                                <Option key={val} value={val}>\r\n                                    {val}\r\n                                </Option>\r\n                            ))}\r\n                        </Select>\r\n                        <Button type=\"primary\" onClick={this.showNotification}>\r\n                            发送通知\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>progress-进度条</h1>\r\n                    <p />\r\n                    <div className=\"antd-demo-content\">\r\n                        <Progress percent={35} status=\"active\" />\r\n                        <Progress\r\n                            percent={70}\r\n                            status=\"exception\"\r\n                            size=\"small\"\r\n                        />\r\n                        <Progress\r\n                            percent={70}\r\n                            showInfo={false}\r\n                            strokeColor={{ '0%': '#108ee9', '100%': '#87d068' }}\r\n                        />\r\n                        <div>\r\n                            <Progress\r\n                                type=\"circle\"\r\n                                percent={this.state.percent}\r\n                                width={80}\r\n                            />\r\n                            <Button.Group>\r\n                                <Button icon=\"minus\" onClick={this.decline} />\r\n                                <Button icon=\"plus\" onClick={this.increase} />\r\n                            </Button.Group>\r\n                        </div>\r\n                        <Progress\r\n                            percent={34}\r\n                            format={percent => `${percent} Days`}\r\n                            type=\"dashboard\"\r\n                        />\r\n                        <Progress\r\n                            percent={34}\r\n                            successPercent={22}\r\n                            strokeLinecap=\"square\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>popconfirm-气泡确认框</h1>\r\n                    <p />\r\n                    <div className=\"antd-demo-content\">\r\n                        <Popconfirm\r\n                            title=\"确定删除？\"\r\n                            okText=\"Yes\"\r\n                            cancelText=\"No\"\r\n                            placement=\"left\"\r\n                            onConfirm={this.handlePopconfirmConfirm}\r\n                            onCancel={this.handlePopconfirmCancel}\r\n                            icon={\r\n                                <Icon\r\n                                    type=\"question-circle-o\"\r\n                                    style={{ color: 'red' }}\r\n                                />\r\n                            }\r\n                        >\r\n                            <Button>Delete</Button>\r\n                        </Popconfirm>\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>spin-加载中</h1>\r\n                    <p />\r\n                    <div className=\"antd-demo-content\">\r\n                        <Spin />\r\n                        <div\r\n                            style={{\r\n                                textAlign: 'center',\r\n                                background: 'rgba(0, 0, 0, 0.05)',\r\n                                borderRadius: '4px',\r\n                                marginBottom: '20px',\r\n                                padding: '30px 50px',\r\n                                margin: '20px 0'\r\n                            }}\r\n                        >\r\n                            <Spin size=\"large\" />\r\n                        </div>\r\n                        <Spin\r\n                            tip=\"Loading...\"\r\n                            spinning={this.state.loading}\r\n                            delay={500}\r\n                        >\r\n                            <Alert\r\n                                message=\"Alert message title\"\r\n                                description=\"Further details about the context of this alert.\"\r\n                                type=\"info\"\r\n                            />\r\n                        </Spin>\r\n                        <div style={{ marginTop: '16px' }}>\r\n                            Loading state:{' '}\r\n                            <Switch\r\n                                checked={this.state.loading}\r\n                                onChange={value => {\r\n                                    this.setState({ loading: value })\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <Spin\r\n                            indicator={\r\n                                <Icon\r\n                                    type=\"loading\"\r\n                                    style={{ fontSize: 24 }}\r\n                                    spin\r\n                                />\r\n                            }\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>skeleton-骨架屏</h1>\r\n                    <p />\r\n                    <div className=\"antd-demo-content\">\r\n                        <Skeleton />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AntdAlert\r\n","import React from 'react';\r\nimport { Row, Col, Divider, Button, AutoComplete, Checkbox, Cascader, DatePicker, InputNumber, Input, Select, Icon, Radio, Switch, } from 'antd'\r\nimport \"antd/dist/antd.css\";\r\nimport moment from 'moment';\r\n\r\nconst { MonthPicker, RangePicker, WeekPicker } = DatePicker;\r\nconst Option = Select.Option;\r\nconst { Password, Search, TextArea } = Input;\r\n\r\nconst cascaderOptions = [{\r\n    value: 'zhejiang',\r\n    label: 'Zhejiang',\r\n    children: [{\r\n        value: 'hangzhou',\r\n        label: 'Hangzhou',\r\n        children: [{\r\n            value: 'xihu',\r\n            label: 'West Lake',\r\n        }],\r\n    }],\r\n}, {\r\n    value: 'jiangsu',\r\n    label: 'Jiangsu',\r\n    disabled: true,\r\n    children: [{\r\n        value: 'nanjing',\r\n        label: 'Nanjing',\r\n        children: [{\r\n            value: 'zhonghuamen',\r\n            label: 'Zhong Hua Men',\r\n        }],\r\n    }],\r\n}];\r\n\r\nlet onCascaderChange = (value) => {\r\n    console.log(value)\r\n}\r\n\r\nfunction cascaderFilter(inputValue, path) {\r\n    return (path.some(option => (option.label).toLowerCase().indexOf(inputValue.toLowerCase()) > -1));\r\n}\r\n\r\nfunction onDateChange(date, dateString) {\r\n    console.log(date, dateString);\r\n}\r\n\r\nconst dateFormat = 'YYYY/MM/DD';\r\nconst monthFormat = 'YYYY/MM';\r\nconst dateFormatList = ['DD/MM/YYYY', 'DD/MM/YY']\r\n\r\nconst selectBefore = (\r\n    <Select defaultValue=\"Http://\" style={{ width: 90 }}>\r\n        <Option value=\"Http://\">Http://</Option>\r\n        <Option value=\"Https://\">Https://</Option>\r\n    </Select>\r\n)\r\n\r\nconst selectAfter = (\r\n    <Select defaultValue=\".com\" style={{ width: 80 }}>\r\n        <Option value=\".com\">.com</Option>\r\n        <Option value=\".jp\">.jp</Option>\r\n        <Option value=\".cn\">.cn</Option>\r\n        <Option value=\".org\">.org</Option>\r\n    </Select>\r\n)\r\n\r\nclass AntdFormInput extends React.Component {\r\n    state = {\r\n        dataSource: [],\r\n        checkboxChecked: true,\r\n        checkboxDisabled: false\r\n    }\r\n    handleSearch = (value) => {\r\n        this.setState({\r\n            dataSource: !value ? [] : [\r\n                value,\r\n                value + value,\r\n                value + value + value,\r\n            ],\r\n        });\r\n    }\r\n    toggleCheckboxChecked = () => {\r\n        this.setState({\r\n            checkboxChecked: !this.state.checkboxChecked\r\n        })\r\n    }\r\n    toggleCheckboxDisabled = () => {\r\n        this.setState({\r\n            checkboxDisabled: !this.state.checkboxDisabled\r\n        })\r\n    }\r\n    onCheckboxChange = (e) => {\r\n        console.log('选中：' + e.target.checked)\r\n        this.setState({\r\n            checkboxChecked: e.target.checked\r\n        })\r\n    }\r\n    render() {\r\n        const label = `${this.state.checkboxChecked ? 'Checked' : 'Unchecked'}-${this.state.checkboxDisabled ? 'Disabled' : 'Enabled'}`;\r\n        const radioStyle = {\r\n            display: 'block',\r\n            height: '30px',\r\n            lineHeight: '30px',\r\n        };\r\n        return (\r\n            <div>\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>综合练习</h1>\r\n                    <div className=\"antd-demo-content\">\r\n                        <Row>\r\n                            <Col span={4}>\r\n                                多选框\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Checkbox.Group name=\"FE\" defaultValue={[2]} disabled={false} onChange={checkedValue => {console.log(checkedValue)}}>\r\n                                    <Checkbox value={1} autoFocus>\r\n                                        HTML\r\n                                    </Checkbox>\r\n                                    <Checkbox value={2} checked disabled={false}>\r\n                                        CSS\r\n                                    </Checkbox>\r\n                                    <Checkbox value={3} onChange={e => {console.log(e.target.value)}} defaultChecked={false}>\r\n                                        JavaScript\r\n                                    </Checkbox>\r\n                                </Checkbox.Group>\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Checkbox.Group name=\"zuowu\" defaultValue={[1,2,3]} onChange={checkedValue => {console.log(checkedValue);}}>\r\n                                    <Checkbox value={1}>水稻</Checkbox>\r\n                                    <Checkbox value={2}>玉米</Checkbox>\r\n                                    <Checkbox value={2}>大豆</Checkbox>\r\n                                </Checkbox.Group>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col span={4}>\r\n                                单选框\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Radio.Group size=\"small\" buttonStyle=\"solid\" defaultValue={0}>\r\n                                    <Radio.Button value={0} defaultChecked autoFocus>中国</Radio.Button>\r\n                                    <Radio.Button value={1}>美国</Radio.Button>\r\n                                    <Radio.Button value={2}>日本</Radio.Button>\r\n                                    <Radio.Button value={3}>欧盟</Radio.Button>\r\n                                </Radio.Group>\r\n                            </Col>\r\n                            <Col span={8}>\r\n\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col span={4}>输入框</Col>\r\n                            <Col span={8}>\r\n                                <Input addonBefore=\"前缀\" addonAfter=\"后缀\" placeholder=\"占位符\" />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>自动补全</h1>\r\n                    <div className=\"antd-demo-content\">\r\n                        <AutoComplete\r\n                            dataSource={this.state.dataSource}\r\n                            style={{ width: 200 }}\r\n                            onSearch={this.handleSearch}\r\n                            placeholder=\"输入\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>多选框</h1>\r\n                    <div className=\"antd-demo-content\">\r\n                        <p style={{ marginBottom: '20px' }}>\r\n                            <Checkbox\r\n                                checked={this.state.checkboxChecked}\r\n                                disabled={this.state.checkboxDisabled}\r\n                                onChange={this.onCheckboxChange}\r\n                            >\r\n                                {label}\r\n                            </Checkbox>\r\n                            <Checkbox indeterminate={true}>全选</Checkbox>\r\n                        </p>\r\n                        <p>\r\n                            <Button\r\n                                type=\"primary\"\r\n                                size=\"small\"\r\n                                onClick={this.toggleCheckboxChecked}\r\n                            >\r\n                                {!this.state.checkboxChecked ? 'Check' : 'Uncheck'}\r\n                            </Button>\r\n                            <Button\r\n                                style={{ marginLeft: '10px' }}\r\n                                type=\"primary\"\r\n                                size=\"small\"\r\n                                onClick={this.toggleCheckboxDisabled}\r\n                            >\r\n                                {!this.state.checkboxDisabled ? 'Disable' : 'Enable'}\r\n                            </Button>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>级联选择</h1>\r\n                    <p></p>\r\n                    <div className=\"antd-demo-content\">\r\n                        <Cascader size=\"small\" defaultValue={['zhejiang', 'hangzhou', 'xihu']} options={cascaderOptions} onChange={onCascaderChange} placeholder=\"Please select\" changeOnSelect showSearch={cascaderFilter} />\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>日期选择框</h1>\r\n                    <p>\r\n                        默认为es-US，分别设置antd和moment\r\n                    </p>\r\n                    <div className=\"antd-demo-content\">\r\n                        <DatePicker onChange={onDateChange} defaultValue={moment('2015/01/01', dateFormat)} format={dateFormat} size=\"small\" dateRender={(current) => {\r\n                            const style = {};\r\n                            if (current.date() === 1) {\r\n                                style.border = '1px solid #1890ff';\r\n                                style.borderRadius = '50%';\r\n                            }\r\n                            return (\r\n                                <div className=\"ant-calendar-date\" style={style}>\r\n                                    {current.date()}\r\n                                </div>\r\n                            );\r\n                        }} /><br />\r\n                        <DatePicker onChange={onDateChange} defaultValue={moment('01/01/2015', dateFormatList[0])} format={dateFormatList} disabled /><br />\r\n                        <MonthPicker onChange={onDateChange} defaultValue={moment('2015/01', monthFormat)} format={monthFormat} placeholder=\"选择月\" /><br />\r\n                        <RangePicker onChange={onDateChange} defaultValue={[moment('2015/01/01', dateFormat), moment('2015/01/01', dateFormat)]} format={dateFormat} /><br />\r\n                        <WeekPicker onChange={onDateChange} placeholder=\"选择周\" renderExtraFooter={() => '自定义内容'} /><br />\r\n                        <RangePicker placeholder={['开始时间', '结束时间']} showTime={{ format: 'HH:mm' }} format=\"YYYY-MM-DD HH:mm\" ranges={{ Today: [moment(), moment()], 'This Month': [moment().startOf('month'), moment().endOf('month')] }} />\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>表单</h1>\r\n                    <p>\r\n                        具有数据收集、校验和提交功能的表单，包含复选框、单选框、输入框、下拉选择框等元素。 <br />\r\n                        排列方式：水平，垂直，行内\r\n                    </p>\r\n                    <div className=\"antd-demo-content\">\r\n\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>数字输入框</h1>\r\n                    <p></p>\r\n                    <div className=\"antd-demo-content\">\r\n                        <InputNumber min={1} max={10} defaultValue={4} step={0.5} size=\"small\" disabled /><br />\r\n                        <InputNumber min={1} max={10} defaultValue={3} size=\"large\" />\r\n                        <InputNumber\r\n                            defaultValue={1000}\r\n                            formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                            parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n                        />\r\n                        <InputNumber\r\n                            defaultValue={100}\r\n                            min={0}\r\n                            max={100}\r\n                            formatter={value => `${value}%`}\r\n                            parser={value => value.replace('%', '')}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>输入框</h1>\r\n                    <p></p>\r\n                    <div className=\"antd-demo-content\" style={{ width: '400px' }}>\r\n                        <Input placeholder=\"输入框\" />\r\n                        <div style={{ marginTop: '16px' }}>\r\n                            <Input addonBefore=\"http://\" addonAfter=\".com\" defaultValue=\"www.baidu.com\" />\r\n                        </div>\r\n                        <div style={{ marginTop: '16px' }}>\r\n                            <Input addonBefore={selectBefore} addonAfter={selectAfter} defaultValue=\"www.baidu.com\" />\r\n                        </div>\r\n                        <div style={{ marginTop: '16px' }}>\r\n                            <Input addonAfter={<Icon type=\"setting\" />} defaultValue=\"fsd\" />\r\n                            <Password placeholder=\"请输入密码\" />\r\n                            <Search enterButton />\r\n                            <TextArea rows={4} />\r\n                            <Input.Group>\r\n                                <Select defaultValue=\"1\" style={{ width: '40%' }}>\r\n                                    <Option value=\"1\">1</Option>\r\n                                    <Option value=\"2\">1</Option>\r\n                                </Select>\r\n                                <Input style={{ width: '60%' }} />\r\n                            </Input.Group>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>提及</h1>\r\n                    <p></p>\r\n                    <div className=\"antd-demo-content\"></div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>评分</h1>\r\n                    <p></p>\r\n                    <div className=\"antd-demo-content\"></div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>单选</h1>\r\n                    <p></p>\r\n                    <div className=\"antd-demo-content\">\r\n                        <Radio.Group onChange={e => { console.log(e.target.value) }}>\r\n                            <Radio value={1} style={radioStyle}>\r\n                                苹果\r\n                            </Radio>\r\n                            <Radio value={2} style={radioStyle}>\r\n                                香蕉\r\n                            </Radio>\r\n                            <Radio value={3} disabled style={radioStyle}>\r\n                                橘子\r\n                            </Radio>\r\n                        </Radio.Group>\r\n                        <Radio.Group name=\"city\" options={[{label: '北京', value: 0}, {label: '上海', value: 1}]} />\r\n                        <Radio.Group buttonStyle=\"solid\" size=\"small\">\r\n                            <Radio.Button value=\"a\">日本</Radio.Button>\r\n                            <Radio.Button value=\"b\">韩国</Radio.Button>\r\n                            <Radio.Button value=\"c\">香港</Radio.Button>\r\n                        </Radio.Group>\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>开关</h1>\r\n                    <p></p>\r\n                    <div className=\"antd-demo-content\">\r\n                        <Switch defaultChecked loading checkedChildren=\"开\" unCheckedChildren=\"关\" onChange={checked => { console.log(`开关： ${checked}`) }} />\r\n                        <Switch\r\n                            defaultChecked\r\n                            disabled\r\n                            size=\"small\"\r\n                            checkedChildren={<Icon type=\"check\" />}\r\n                            unCheckedChildren={<Icon type=\"close\" />}\r\n                            onChange={checked => { console.log(`开关： ${checked}`) }}\r\n                        />\r\n                        {/* <Switch defaultChecked onChange={checked => {console.log(`开关： ${checked}`)}} /> */}\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>滑块</h1>\r\n                    <p></p>\r\n                    <div className=\"antd-demo-content\"></div>\r\n                </div>\r\n                <Divider />\r\n                <div className=\"antd-demo-box\">\r\n                    <h1>选择框</h1>\r\n                    <p></p>\r\n                    <div className=\"antd-demo-content\"></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AntdFormInput\r\n","export default class CreateData {\r\n    constructor(){\r\n\r\n    }\r\n\r\n    find(){\r\n\r\n    }\r\n}\r\n","import Mock from 'mockjs';\r\nimport CreateData from '../utils/createData'\r\nconst Random = Mock.Random\r\n\r\n// 扩展方法\r\nRandom.extend({\r\n    filmtype: function (date) {\r\n        var filmTypes = [\r\n            '喜剧',\r\n            '悲剧',\r\n            '爱情',\r\n            '动作',\r\n            '枪战',\r\n            '犯罪',\r\n            '惊悚',\r\n            '恐怖',\r\n            '悬疑',\r\n            '动画',\r\n            '家庭',\r\n            '奇幻',\r\n            '魔幻',\r\n            '科幻',\r\n            '战争',\r\n            '青春'\r\n        ]\r\n        return this.pick(filmTypes)\r\n    }\r\n})\r\n\r\nvar template = {\r\n    'film|10': [\r\n        {\r\n            'id|+1': 1,\r\n            name: '@CTITLE',\r\n            title: '@CTITLE',\r\n            type: '@FILMTYPE',\r\n            hot: '@BOOLEAN',\r\n            image: '@IMAGE'\r\n        }\r\n    ]\r\n}\r\n\r\nconsole.log(CreateData)\r\n\r\nvar movieList = {\r\n    data: Mock.mock(template)\r\n}\r\n\r\nexport { movieList }\r\n","import axios from 'axios'\r\n\r\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded'\r\n\r\n// 请求拦截器\r\naxios.interceptors.request.use(function(config) {\r\n    return config;\r\n  }, function(error) {\r\n    return Promise.reject(error);\r\n  })\r\n  // 响应拦截器\r\naxios.interceptors.response.use(function(response) {\r\n  return response;\r\n}, function(error) {\r\n  return Promise.reject(error);\r\n})\r\n\r\n// 封装axios的post请求\r\nexport function fetch(url, params) {\r\n  return new Promise((resolve, reject) => {\r\n    axios.post(url, params)\r\n      .then(response => {\r\n        resolve(response.data);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      })\r\n  })\r\n}\r\n\r\nexport default {\r\n  mockdata(url, params) {\r\n    return fetch(url, params);\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Table } from 'antd';\r\n// 由于 antd 组件的默认文案是英文，所以需要修改为中文\r\nimport \"antd/dist/antd.css\";\r\nimport { movieList } from '../mock/movieList'\r\nimport api from './../axios/api'\r\n\r\n\r\nconst columns = [{\r\n    title: 'ID',\r\n    dataIndex: 'id',\r\n    key: 'id'\r\n}, {\r\n    title: '名称',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n}, {\r\n    title: '标题',\r\n    dataIndex: 'title',\r\n    key: 'title',\r\n}, {\r\n    title: '热门',\r\n    dataIndex: 'hot',\r\n    key: 'hot',\r\n    render: tags => (\r\n        <span>\r\n            {tags ? '是' : '否'}\r\n        </span>\r\n    )\r\n}, {\r\n    title: '类型',\r\n    dataIndex: 'type',\r\n    key: 'type',\r\n}];\r\n\r\nclass FilmList extends React.Component {\r\n    state = {\r\n        movieList\r\n    };\r\n\r\n    componentDidMount() {\r\n        api.mockdata('/data/index')\r\n            .then(res => {\r\n                console.log(res);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { movieList } = this.state;\r\n        console.log(movieList)\r\n        return (\r\n            <Table dataSource={movieList.data.film} columns={columns} rowKey=\"id\" />\r\n        );\r\n    }\r\n}\r\n\r\nexport default FilmList;\r\n","import React from 'react';\r\nimport {\r\n    Table,\r\n    Divider,\r\n    Form,\r\n    Input,\r\n    Radio,\r\n    Modal,\r\n    message,\r\n    Button,\r\n    Popconfirm,\r\n} from 'antd';\r\n// 由于 antd 组件的默认文案是英文，所以需要修改为中文\r\nimport 'antd/dist/antd.css';\r\nimport { movieList } from '../mock/movieList';\r\nimport api from './../axios/api';\r\nimport axios from 'axios';\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\nclass StudentList extends React.Component {\r\n    state = {\r\n        studentList: [],\r\n        movieList,\r\n        modalVisible: false,\r\n        selectedStudents: [],\r\n        modalType: 'add',\r\n    };\r\n\r\n    componentDidMount() {\r\n        api.mockdata('/data/index').then(res => {\r\n            console.log(res);\r\n        });\r\n        this.getStudentList();\r\n    }\r\n\r\n    getStudentList = () => {\r\n        axios.get('http://127.0.0.1:3004/student/list').then(res => {\r\n            if (res.data.code === 1) {\r\n                this.setState({\r\n                    studentList: res.data.data,\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    showModal = (id = -1) => {\r\n        const {\r\n            form: { setFieldsValue, resetFields },\r\n        } = this.props;\r\n        const { studentList } = this.state;\r\n        let newState = {};\r\n        resetFields();\r\n        if (id === -1) {\r\n            // 新增学生\r\n            newState = {\r\n                modalVisible: true,\r\n                modalType: 'add',\r\n            };\r\n        } else {\r\n            // 修改学生\r\n            let currentStudent = {};\r\n            studentList.forEach(item => {\r\n                if (item.id === id) {\r\n                    currentStudent = item;\r\n                }\r\n            });\r\n            newState = {\r\n                modalVisible: true,\r\n                modalType: 'edit',\r\n                currentStudent: id,\r\n            };\r\n            setFieldsValue(currentStudent);\r\n        }\r\n        this.setState(newState);\r\n    };\r\n\r\n    handleOk = () => {\r\n        const { studentList, currentStudent, modalType } = this.state;\r\n        const {\r\n            form: { validateFields },\r\n        } = this.props;\r\n        validateFields((err, values) => {\r\n            if (err) {\r\n                return;\r\n            }\r\n            const newStudents = Array.from(studentList);\r\n            if (modalType === 'add') {\r\n                // 新增\r\n                newStudents.push(values);\r\n            } else {\r\n                // 修改\r\n                let studentIndex = -1;\r\n                newStudents.forEach((item, index) => {\r\n                    if (item.id === currentStudent) {\r\n                        studentIndex = index;\r\n                    }\r\n                });\r\n                newStudents.splice(studentIndex, 1, values);\r\n            }\r\n            this.setState({\r\n                students: newStudents,\r\n                modalVisible: false,\r\n            });\r\n        });\r\n    };\r\n\r\n    handleCancel = () => {\r\n        this.setState({\r\n            modalVisible: false,\r\n        });\r\n    };\r\n\r\n    deleteStudents = () => {\r\n        const { selectedStudents } = this.state;\r\n        if (selectedStudents.length === 0) {\r\n            message.error('请至少选择一项');\r\n        } else {\r\n            axios\r\n                .get('http://127.0.0.1:3004/student/delete', {\r\n                    params: {\r\n                        students: selectedStudents,\r\n                    },\r\n                })\r\n                .then(res => {\r\n                    if (res.data.code === 1) {\r\n                        this.getStudentList();\r\n                    }\r\n                });\r\n            this.setState({\r\n                selectedStudents: [],\r\n            });\r\n        }\r\n    };\r\n\r\n    deleteOneStudent = (id, e) => {\r\n        axios\r\n            .get('http://127.0.0.1:3004/student/delete', {\r\n                params: {\r\n                    students: [id],\r\n                },\r\n            })\r\n            .then(res => {\r\n                if (res.data.code === 1) {\r\n                    this.getStudentList();\r\n                }\r\n            });\r\n    };\r\n\r\n    render() {\r\n        const { studentList, modalVisible } = this.state;\r\n        const {\r\n            form: { getFieldDecorator, getFieldError, isFieldTouched },\r\n        } = this.props;\r\n        // Only show error after a field is touched.\r\n        const idError = isFieldTouched('id') && getFieldError('id');\r\n        const nameError = isFieldTouched('name') && getFieldError('name');\r\n        const ageError = isFieldTouched('age') && getFieldError('age');\r\n        const sexError = isFieldTouched('sex') && getFieldError('sex');\r\n\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 8 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 16 },\r\n            },\r\n        };\r\n\r\n        // rowSelection object indicates the need for row selection\r\n        const rowSelection = {\r\n            onChange: (selectedRowKeys, selectedRows) => {\r\n                // console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n                this.setState({\r\n                    selectedStudents: selectedRowKeys,\r\n                });\r\n            },\r\n            getCheckboxProps: record => ({\r\n                disabled: record.name === 'Disabled User', // Column configuration not to be checked\r\n                name: record.name,\r\n            }),\r\n        };\r\n\r\n        const tableTitle = (\r\n            <div>\r\n                <span>\r\n                    三年二班学生名单（共计\r\n                    {studentList.length}\r\n                    人）\r\n                </span>\r\n                <br />\r\n                <br />\r\n                <Button.Group>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        icon=\"delete\"\r\n                        onClick={this.deleteStudents}\r\n                    >\r\n                        批量删除\r\n                    </Button>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        icon=\"plus\"\r\n                        onClick={() => {\r\n                            this.showModal();\r\n                        }}\r\n                    >\r\n                        新增\r\n                    </Button>\r\n                </Button.Group>\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div>\r\n                <Table\r\n                    bordered\r\n                    rowKey=\"id\"\r\n                    dataSource={studentList}\r\n                    rowSelection={rowSelection}\r\n                    title={() => tableTitle}\r\n                >\r\n                    <Column title=\"ID\" dataIndex=\"id\" />\r\n                    <Column title=\"姓名\" dataIndex=\"name\" />\r\n                    <Column\r\n                        title=\"性别\"\r\n                        dataIndex=\"sex\"\r\n                        render={sex => <span>{sex === 1 ? '男' : '女'}</span>}\r\n                    />\r\n                    <Column title=\"年龄\" dataIndex=\"age\" />\r\n                    <Column title=\"生日\" dataIndex=\"birthday\" />\r\n                    <Column\r\n                        title=\"幸运色\"\r\n                        dataIndex=\"color\"\r\n                        render={color => (\r\n                            <i\r\n                                style={{\r\n                                    display: 'inline-block',\r\n                                    width: '20px',\r\n                                    height: '20px',\r\n                                    backgroundColor: color,\r\n                                }}\r\n                            />\r\n                        )}\r\n                    />\r\n                    <Column title=\"星座\" dataIndex=\"constellation\" />\r\n                    <Column title=\"地址\" dataIndex=\"address\" />\r\n                    <Column\r\n                        title=\"操作\"\r\n                        key=\"Action\"\r\n                        render={(text, record) => (\r\n                            <span>\r\n                                <a\r\n                                    href=\"javascript:;\"\r\n                                    onClick={e => this.showModal(record.id, e)}\r\n                                >\r\n                                    修改\r\n                                </a>\r\n                                <Divider type=\"vertical\" />\r\n                                <Popconfirm\r\n                                    title=\"确认删除此条数据？\"\r\n                                    onConfirm={e => {\r\n                                        this.deleteOneStudent(record.id, e);\r\n                                    }}\r\n                                >\r\n                                    <a href=\"javascript:;\">删除</a>\r\n                                </Popconfirm>\r\n                            </span>\r\n                        )}\r\n                    />\r\n                </Table>\r\n                {/* 模态框 */}\r\n                <Modal\r\n                    title=\"编辑学生信息\"\r\n                    visible={modalVisible}\r\n                    onOk={this.handleOk}\r\n                    onCancel={this.handleCancel}\r\n                >\r\n                    <div style={{ width: '400px' }}>\r\n                        <Form>\r\n                            <Form.Item\r\n                                {...formItemLayout}\r\n                                label=\"ID\"\r\n                                validateStatus={idError ? 'error' : ''}\r\n                                help={idError || ''}\r\n                            >\r\n                                {getFieldDecorator('id', {\r\n                                    rules: [\r\n                                        { required: true, message: '请填写id' },\r\n                                    ],\r\n                                })(\r\n                                    <Input\r\n                                        placeholder=\"ID\"\r\n                                        disabled={\r\n                                            this.state.modalType === 'edit'\r\n                                        }\r\n                                    />,\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                {...formItemLayout}\r\n                                label=\"姓名\"\r\n                                validateStatus={nameError ? 'error' : ''}\r\n                                help={nameError || ''}\r\n                            >\r\n                                {getFieldDecorator('name', {\r\n                                    rules: [\r\n                                        {\r\n                                            required: true,\r\n                                            message: '请填写姓名',\r\n                                        },\r\n                                    ],\r\n                                })(<Input placeholder=\"姓名\" />)}\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                {...formItemLayout}\r\n                                label=\"年龄\"\r\n                                validateStatus={ageError ? 'error' : ''}\r\n                                help={ageError || ''}\r\n                            >\r\n                                {getFieldDecorator('age', {\r\n                                    rules: [\r\n                                        {\r\n                                            required: true,\r\n                                            message: '请填写年龄',\r\n                                        },\r\n                                    ],\r\n                                })(<Input type=\"number\" placeholder=\"年龄\" />)}\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                {...formItemLayout}\r\n                                label=\"性别\"\r\n                                validateStatus={sexError ? 'error' : ''}\r\n                                help={sexError || ''}\r\n                            >\r\n                                {getFieldDecorator('sex')(\r\n                                    <Radio.Group buttonStyle=\"solid\">\r\n                                        <Radio.Button value={1}>\r\n                                            男\r\n                                        </Radio.Button>\r\n                                        <Radio.Button value={0}>\r\n                                            女\r\n                                        </Radio.Button>\r\n                                    </Radio.Group>,\r\n                                )}\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form.create()(StudentList);\r\n","import React from 'react';\r\nimport {\r\n    extendObservable,\r\n    decorate,\r\n    observable,\r\n    computed,\r\n    action,\r\n    autorun,\r\n} from 'mobx';\r\nimport { observer, inject } from 'mobx-react';\r\nimport { Button, Input } from 'antd';\r\nimport styles from './TodoListLess.module.css';\r\n\r\nclass Todo {\r\n    constructor(title) {\r\n        this.id = Math.random();\r\n        this.title = title;\r\n        this.finished = false;\r\n    }\r\n}\r\n\r\ndecorate(Todo, {\r\n    title: observable,\r\n    finished: observable,\r\n});\r\n\r\nclass TodoList {\r\n    @observable todos = [];\r\n    // 未完成项目数\r\n    @computed get unfinishedTodoCount() {\r\n        return this.todos.filter(todo => !todo.finished).length;\r\n    }\r\n    @action addTodo(title) {\r\n        return new Promise((resolve, reject) => {\r\n            let newTodo = new Todo(title);\r\n            this.todos.push(newTodo);\r\n            resolve();\r\n        });\r\n    }\r\n}\r\n\r\n@inject('AppStore')\r\n@inject('TodoListStore')\r\n@observer\r\nclass TodoListView extends React.Component {\r\n    state = {\r\n        todoTitle: '',\r\n    };\r\n    handleChange = e => {\r\n        this.setState({\r\n            todoTitle: e.target.value,\r\n        });\r\n    };\r\n    handlePressEnter = () => {\r\n        this.props.todoList.addTodo(this.state.todoTitle).then(() => {\r\n            this.setState({\r\n                todoTitle: '',\r\n            });\r\n        });\r\n    };\r\n    changeAppTheme = () => {\r\n        this.props.AppStore.state.theme = 'red';\r\n    };\r\n    render() {\r\n        const {\r\n            state: { theme },\r\n        } = this.props.AppStore;\r\n        return (\r\n            <div className={styles.todoList} style={{ color: theme }}>\r\n                <Input\r\n                    autoFocus\r\n                    value={this.state.todoTitle}\r\n                    style={{ width: '280px' }}\r\n                    placeholder=\"添加todo，回车确认\"\r\n                    onChange={e => {\r\n                        this.handleChange(e);\r\n                    }}\r\n                    onPressEnter={this.handlePressEnter}\r\n                />\r\n                <ul>\r\n                    {this.props.todoList.todos.map(todo => (\r\n                        <TodoView todo={todo} key={todo.id} />\r\n                    ))}\r\n                </ul>\r\n                Tasks left: {this.props.todoList.unfinishedTodoCount} || {theme}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n@observer\r\nclass TodoView extends React.Component {\r\n    render() {\r\n        const { todo } = this.props;\r\n        return (\r\n            <li>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    defaultChecked={todo.finished}\r\n                    onClick={() => (todo.finished = !todo.finished)}\r\n                />\r\n                {todo.title}\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nconst store = new TodoList();\r\n\r\nclass MobxDemoView extends React.Component {\r\n    constructor() {\r\n        super();\r\n        extendObservable(this, {\r\n            count: 0,\r\n        });\r\n    }\r\n    onIncrement = () => {\r\n        this.count++;\r\n    };\r\n    onDecrement = () => {\r\n        this.count--;\r\n    };\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style={{ marginBottom: '16px' }}>\r\n                    <p style={{ marginBottom: '10px' }}>{this.count}</p>\r\n                    <Button.Group>\r\n                        <Button type=\"primary\" onClick={this.onIncrement}>\r\n                            加1\r\n                        </Button>\r\n                        <Button type=\"primary\" onClick={this.onDecrement}>\r\n                            减1\r\n                        </Button>\r\n                    </Button.Group>\r\n                </div>\r\n                <div>\r\n                    <TodoListView todoList={store} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default observer(MobxDemoView);\r\n","import React from 'react';\r\nimport {\r\n    extendObservable,\r\n    decorate,\r\n    observable,\r\n    computed,\r\n    action,\r\n    autorun,\r\n} from 'mobx';\r\nimport { observer, inject } from 'mobx-react';\r\nimport { Button, Input } from 'antd';\r\nimport MobxDemoView from './MobxBasic/TodoListView';\r\n\r\n// class Todo {\r\n//     id = Math.random();\r\n//     @observable title = '';\r\n//     @observable finished = false;\r\n// }\r\n\r\nclass Todo {\r\n    constructor(title) {\r\n        this.id = Math.random();\r\n        this.title = title;\r\n        this.finished = false;\r\n    }\r\n}\r\n\r\ndecorate(Todo, {\r\n    title: observable,\r\n    finished: observable,\r\n});\r\n\r\nclass TodoList {\r\n    todos = [];\r\n    // 未完成项目数\r\n    get unfinishedTodoCount() {\r\n        return this.todos.filter(todo => !todo.finished).length;\r\n    }\r\n    addTodo(title) {\r\n        return new Promise((resolve, reject) => {\r\n            let newTodo = new Todo(title);\r\n            this.todos.push(newTodo);\r\n            resolve();\r\n        });\r\n    }\r\n}\r\n\r\ndecorate(TodoList, {\r\n    todos: observable,\r\n    unfinishedTodoCount: computed,\r\n    addTodo: action,\r\n});\r\n\r\nclass Timer {\r\n    @observable start = Date.now();\r\n    @observable current = Date.now();\r\n\r\n    @computed\r\n    get elapsedTime() {\r\n        return this.current - this.start + 'milliseconds';\r\n    }\r\n\r\n    @action\r\n    tick() {\r\n        this.current = Date.now();\r\n    }\r\n}\r\n\r\nvar timer = new Timer();\r\nconsole.log(timer.elapsedTime);\r\ntimer.start = Date.now();\r\nconsole.log(timer.elapsedTime);\r\n\r\nvar numbers = observable([1, 2, 3]);\r\nvar sum = computed(() => numbers.reduce((a, b) => a + b, 0));\r\n\r\nvar disposer = autorun(() => console.log(sum.get()));\r\n// 输出 '6'\r\nnumbers.push(4);\r\n// 输出 '10'\r\n\r\ndisposer();\r\nnumbers.push(5);\r\n// 不会再输出任何值。`sum` 不会再重新计算。\r\n\r\nconst TodoListView = observer(\r\n    class TodoListView extends React.Component {\r\n        state = {\r\n            todoTitle: '',\r\n        };\r\n        handleChange = e => {\r\n            this.setState({\r\n                todoTitle: e.target.value,\r\n            });\r\n        };\r\n        handleClick = () => {\r\n            this.props.todoList.addTodo(this.state.todoTitle).then(() => {\r\n                this.setState({\r\n                    todoTitle: '',\r\n                });\r\n            });\r\n            console.log(this.props.todoList);\r\n        };\r\n        render() {\r\n            return (\r\n                <div>\r\n                    <Input\r\n                        value={this.state.todoTitle}\r\n                        style={{ width: '280px' }}\r\n                        placeholder=\"添加todo\"\r\n                        onChange={e => {\r\n                            this.handleChange(e);\r\n                        }}\r\n                    />\r\n                    <Button type=\"primary\" onClick={this.handleClick}>\r\n                        添加\r\n                    </Button>\r\n                    <ul>\r\n                        {this.props.todoList.todos.map(todo => (\r\n                            <TodoView todo={todo} key={todo.id} />\r\n                        ))}\r\n                    </ul>\r\n                    Tasks left: {this.props.todoList.unfinishedTodoCount}\r\n                </div>\r\n            );\r\n        }\r\n    },\r\n);\r\n\r\nconst TodoView = observer(({ todo }) => (\r\n    <li>\r\n        <input\r\n            type=\"checkbox\"\r\n            defaultChecked={todo.finished}\r\n            onClick={() => (todo.finished = !todo.finished)}\r\n        />\r\n        {todo.title}\r\n    </li>\r\n));\r\n\r\nconst store = new TodoList();\r\n\r\n@inject('AppStore')\r\n@observer\r\nclass MobxDemo extends React.Component {\r\n    constructor() {\r\n        super();\r\n        extendObservable(this, {\r\n            count: 0,\r\n            color: '#000',\r\n        });\r\n        this.state = {\r\n            color: '#000',\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        console.log(this.props.AppStore.state);\r\n    }\r\n    onIncrement = () => {\r\n        this.count++;\r\n    };\r\n    onDecrement = () => {\r\n        this.count--;\r\n    };\r\n    handleThemeChange = e => {\r\n        this.color = e.target.value;\r\n    };\r\n    changeAppTheme = () => {\r\n        console.log(this.color);\r\n        this.props.AppStore.setTheme({\r\n            theme: this.color,\r\n        });\r\n    };\r\n    render() {\r\n        const {\r\n            state: { theme },\r\n        } = this.props.AppStore;\r\n        return (\r\n            <div>\r\n                <div style={{ marginBottom: '16px' }}>\r\n                    <p style={{ marginBottom: '10px' }}>{this.count}</p>\r\n                    <Button.Group>\r\n                        <Button type=\"primary\" onClick={this.onIncrement}>\r\n                            加1\r\n                        </Button>\r\n                        <Button type=\"primary\" onClick={this.onDecrement}>\r\n                            减1\r\n                        </Button>\r\n                    </Button.Group>\r\n                </div>\r\n                <div>\r\n                    <TodoListView todoList={store} />\r\n                </div>\r\n                <MobxDemoView />\r\n                <Input\r\n                    placeholder=\"请输入一个颜色值\"\r\n                    onChange={this.handleThemeChange}\r\n                />\r\n                {theme}\r\n                <Button type=\"primary\" onClick={this.changeAppTheme}>\r\n                    修改颜色\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default observer(MobxDemo);\r\n","import React from 'react';\r\nimport { Route, NavLink } from 'react-router-dom';\r\nimport { Layout, Menu, Icon } from 'antd';\r\nimport './LayoutBox.css';\r\nimport Home from './pages/Home';\r\nimport Context from './pages/Context';\r\nimport Logo from './pages/Logo';\r\nimport AntdDemo from './pages/AntdDemo';\r\nimport AntdForm from './pages/AntdForm';\r\nimport AntdMenu from './pages/AntdMenu';\r\nimport AntdTable from './pages/AntdTable';\r\nimport AntdData from './pages/AntdData';\r\nimport AntdAlert from './pages/AntdAlert';\r\nimport AntdFormInput from './pages/AntdFormInput';\r\nimport FilmList from './pages/FilmList';\r\nimport StudentList from './pages/StudentList';\r\nimport MobxDemo from './pages/MobxDemo';\r\n\r\nconst { Content, Sider, Header, Footer } = Layout;\r\n\r\nfunction LayoutBox() {\r\n    return (\r\n        <Layout>\r\n            <Sider\r\n                style={{\r\n                    overflow: 'auto',\r\n                    height: '100vh',\r\n                    position: 'fixed',\r\n                    left: 0,\r\n                }}\r\n            >\r\n                <div className=\"logo\" />\r\n                <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\r\n                    <Menu.Item key=\"1\">\r\n                        <NavLink to=\"/\">\r\n                            <Icon type=\"user\" />\r\n                            <span className=\"nav-text\">Home</span>\r\n                        </NavLink>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"r-2\">\r\n                        <NavLink to=\"/context\">\r\n                            <Icon type=\"user\" />\r\n                            <span className=\"nav-text\">Context</span>\r\n                        </NavLink>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"2\">\r\n                        <NavLink to=\"/logo\">\r\n                            <Icon type=\"video-camera\" />\r\n                            <span className=\"nav-text\">Logo</span>\r\n                        </NavLink>\r\n                    </Menu.Item>\r\n                    <Menu.SubMenu\r\n                        key=\"antd\"\r\n                        title={\r\n                            <span>\r\n                                <Icon type=\"mail\" />\r\n                                <span>antd练习</span>\r\n                            </span>\r\n                        }\r\n                    >\r\n                        <Menu.Item key=\"3\">\r\n                            <NavLink to=\"/antd-demo\">\r\n                                <Icon type=\"upload\" />\r\n                                <span className=\"nav-text\">antd实践</span>\r\n                            </NavLink>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"4\">\r\n                            <NavLink to=\"/antd-form-input\">\r\n                                <Icon type=\"bar-chart\" />\r\n                                <span className=\"nav-text\">antd表单域</span>\r\n                            </NavLink>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"5\">\r\n                            <NavLink to=\"/antd-form\">\r\n                                <Icon type=\"cloud-o\" />\r\n                                <span className=\"nav-text\">antd表单</span>\r\n                            </NavLink>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"6\">\r\n                            <NavLink to=\"/antd-menu\">\r\n                                <Icon type=\"appstore-o\" />\r\n                                <span className=\"nav-text\">antd导航</span>\r\n                            </NavLink>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"7\">\r\n                            <NavLink to=\"/antd-table\">\r\n                                <Icon type=\"appstore-o\" />\r\n                                <span className=\"nav-text\">antd表格</span>\r\n                            </NavLink>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"8\">\r\n                            <NavLink to=\"/antd-data\">\r\n                                <Icon type=\"appstore-o\" />\r\n                                <span className=\"nav-text\">antd数据</span>\r\n                            </NavLink>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"9\">\r\n                            <NavLink to=\"/antd-alert\">\r\n                                <Icon type=\"appstore-o\" />\r\n                                <span className=\"nav-text\">antd交互</span>\r\n                            </NavLink>\r\n                        </Menu.Item>\r\n                        <Menu.ItemGroup title=\"antd综合\" key=\"g1\">\r\n                            <Menu.Item key=\"10\">\r\n                                <NavLink to=\"/film-list\">\r\n                                    <Icon type=\"team\" />\r\n                                    <span className=\"nav-text\">影片列表</span>\r\n                                </NavLink>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"11\">\r\n                                <NavLink to=\"/student-list\">\r\n                                    <Icon type=\"team\" />\r\n                                    <span className=\"nav-text\">学生列表</span>\r\n                                </NavLink>\r\n                            </Menu.Item>\r\n                        </Menu.ItemGroup>\r\n                    </Menu.SubMenu>\r\n                    <Menu.Item key=\"mobx-1\">\r\n                        <NavLink to=\"/mobx-demo\">\r\n                            <Icon type=\"shop\" />\r\n                            <span className=\"nav-text\">mobx实践</span>\r\n                        </NavLink>\r\n                    </Menu.Item>\r\n                </Menu>\r\n            </Sider>\r\n            <Layout style={{ marginLeft: 200 }}>\r\n                <Header style={{ background: '#fff', padding: 0 }} />\r\n                <Content\r\n                    style={{\r\n                        margin: '24px 16px 0',\r\n                        padding: '24px',\r\n                        overflow: 'initial',\r\n                        backgroundColor: '#fff',\r\n                    }}\r\n                >\r\n                    <Route exact path=\"/\" component={Home} />\r\n                    <Route path=\"/context\" component={Context} />\r\n                    <Route path=\"/logo\" component={Logo} />\r\n                    <Route path=\"/antd-demo\" component={AntdDemo} />\r\n                    <Route path=\"/antd-form-input\" component={AntdFormInput} />\r\n                    <Route path=\"/antd-form\" component={AntdForm} />\r\n                    <Route path=\"/antd-menu\" component={AntdMenu} />\r\n                    <Route path=\"/antd-table\" component={AntdTable} />\r\n                    <Route path=\"/antd-data\" component={AntdData} />\r\n                    <Route path=\"/antd-alert\" component={AntdAlert} />\r\n                    <Route path=\"/film-list\" component={FilmList} />\r\n                    <Route path=\"/student-list\" component={StudentList} />\r\n                    <Route path=\"/mobx-demo\" component={MobxDemo} />\r\n                </Content>\r\n                <Footer style={{ textAlign: 'center' }}>\r\n                    Ant Design ©2018 Created by Ant UED\r\n                </Footer>\r\n            </Layout>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default LayoutBox;\r\n","import Mock from 'mockjs' // 引入mockjs\r\n\r\nconst Random = Mock.Random // Mock.Random 是一个工具类，用于生成各种随机数据\r\n\r\nlet data = [] // 用于接受生成数据的数组\r\nlet size = [\r\n  '300x250', '250x250', '240x400', '336x280',\r\n  '180x150', '720x300', '468x60', '234x60',\r\n  '88x31', '120x90', '120x60', '120x240',\r\n  '125x125', '728x90', '160x600', '120x600',\r\n  '300x600'\r\n] // 定义随机值\r\nfor(let i = 0; i < 10; i ++) { // 可自定义生成的个数\r\n  let template = {\r\n    'Boolean': Random.boolean, // 可以生成基本数据类型\r\n    'Natural': Random.natural(1, 10), // 生成1到100之间自然数\r\n    'Integer': Random.integer(1, 100), // 生成1到100之间的整数\r\n    'Float': Random.float(0, 100, 0, 5), // 生成0到100之间的浮点数,小数点后尾数为0到5位\r\n    'Character': Random.character(), // 生成随机字符串,可加参数定义规则\r\n    'String': Random.string(2, 10), // 生成2到10个字符之间的字符串\r\n    'Range': Random.range(0, 10, 2), // 生成一个随机数组\r\n    'Date': Random.date(), // 生成一个随机日期,可加参数定义日期格式\r\n    'Image': Random.image(Random.size, '#02adea', 'Hello'), // Random.size表示将从size数据中任选一个数据\r\n    'Color': Random.color(), // 生成一个颜色随机值\r\n    'Paragraph':Random.paragraph(2, 5), //生成2至5个句子的文本\r\n    'Name': Random.name(), // 生成姓名\r\n    'Url': Random.url(), // 生成web地址\r\n    'Address': Random.province() // 生成地址\r\n  }\r\n  data.push(template)\r\n}\r\n\r\nMock.mock('/data/index', 'post', data) // 根据数据模板生成模拟数据\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport LayoutBox from './LayoutBox';\r\nimport './mock/mock';\r\n\r\n// 修饰器\r\nfunction testtable(isTesttable) {\r\n    return function(target) {\r\n        target.isTesttable = isTesttable;\r\n    };\r\n}\r\n\r\nclass App extends React.Component {\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <Switch>\r\n                    <Route\r\n                        path=\"/register\"\r\n                        exact\r\n                        render={({ location }) => <h2>注册页</h2>}\r\n                    />\r\n                    <Route\r\n                        path=\"/login\"\r\n                        exact\r\n                        render={({ location }) => <h2>登录页</h2>}\r\n                    />\r\n                    <Route path=\"/\" component={LayoutBox} />\r\n                </Switch>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { observable, action, runInAction, autorun } from 'mobx';\r\n\r\nclass AppStore {\r\n    @observable state = {\r\n        count: 0,\r\n        theme: '#3f3f3f',\r\n    };\r\n\r\n    @action setVisible = async payload => {\r\n        runInAction(() => {\r\n            this.state.theme = payload.theme;\r\n        });\r\n    };\r\n    @action setTheme = themeObj => {\r\n        runInAction(() => {\r\n            this.state.theme = themeObj.theme;\r\n        });\r\n        autorun(() => {\r\n            console.log(this.state.theme);\r\n        });\r\n    };\r\n}\r\n\r\nconst appStore = new AppStore();\r\nexport default appStore;\r\nexport { AppStore };\r\n","import { observable, action, runInAction, autorun } from 'mobx';\r\n\r\nclass TodoListMod {\r\n    @observable state = {\r\n        count: 0,\r\n        theme: '#3f3f3f',\r\n    };\r\n\r\n    @action setTheme = newTheme => {\r\n        this.theme = newTheme;\r\n    };\r\n}\r\n\r\nconst todoListMod = new TodoListMod();\r\nexport default todoListMod;\r\nexport { TodoListMod };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'mobx-react';\r\nimport { LocaleProvider } from 'antd';\r\nimport zh_TW from 'antd/lib/locale-provider/zh_TW';\r\nimport moment from 'moment';\r\nimport 'moment/locale/zh-hk';\r\nimport './index.css';\r\nimport App from './App';\r\n// import Layout from './LayoutBox';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport * as stores from './stores/index';\r\n\r\nmoment.locale('zh-hk');\r\n\r\nReactDOM.render(\r\n    <LocaleProvider locale={zh_TW}>\r\n        <Provider {...stores}>\r\n            <App />\r\n        </Provider>\r\n    </LocaleProvider>,\r\n    document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}